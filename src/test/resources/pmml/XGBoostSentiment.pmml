<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn" version="1.6.18"/>
		<Timestamp>2021-05-27T20:19:36Z</Timestamp>
	</Header>
	<DataDictionary>
		<DataField name="Score" optype="categorical" dataType="integer">
			<Value value="0"/>
			<Value value="1"/>
		</DataField>
		<DataField name="Sentence" optype="categorical" dataType="string"/>
	</DataDictionary>
	<TransformationDictionary>
		<DefineFunction name="tf(lowercase(Sentence))" optype="continuous" dataType="integer">
			<ParameterField name="document"/>
			<ParameterField name="term"/>
			<TextIndex textField="document" x-wordRE="\w+">
				<FieldRef field="term"/>
			</TextIndex>
		</DefineFunction>
	</TransformationDictionary>
	<MiningModel functionName="classification" algorithmName="XGBoost (GBTree)" x-mathContext="float">
		<MiningSchema>
			<MiningField name="Score" usageType="target"/>
			<MiningField name="Sentence"/>
		</MiningSchema>
		<Segmentation multipleModelMethod="modelChain" missingPredictionTreatment="returnMissing">
			<Segment id="1">
				<True/>
				<MiningModel functionName="regression" x-mathContext="float">
					<MiningSchema>
						<MiningField name="Sentence"/>
					</MiningSchema>
					<Output>
						<OutputField name="xgbValue" optype="continuous" dataType="float" isFinalResult="false"/>
					</Output>
					<LocalTransformations>
						<DerivedField name="lowercase(Sentence)" optype="categorical" dataType="string">
							<Apply function="lowercase">
								<FieldRef field="Sentence"/>
							</Apply>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), 5)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">5</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), 5))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), 5)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), after)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">after</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), after))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), after)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), and)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">and</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), and))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), and)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), any)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">any</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), any))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), any)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), at)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">at</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), at))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), at)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), awesome)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">awesome</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), awesome))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), awesome)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), bad)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">bad</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), bad))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), bad)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), be)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">be</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), be))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), be)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), been)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">been</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), been))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), been)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), best)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">best</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), best))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), best)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), better)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">better</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), better))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), better)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), bluetooth)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">bluetooth</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), bluetooth))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), bluetooth)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), both)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">both</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), both))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), both)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), buy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">buy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), buy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), buy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), calls)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">calls</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), calls))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), calls)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), camera)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">camera</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), camera))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), camera)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), case)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">case</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), case))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), case)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), cases)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">cases</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), cases))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), cases)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), cell)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">cell</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), cell))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), cell)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), clear)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">clear</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), clear))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), clear)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), comfortable)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">comfortable</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), comfortable))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), comfortable)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), completely)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">completely</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), completely))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), completely)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), cool)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">cool</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), cool))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), cool)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), could)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">could</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), could))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), could)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), design)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">design</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), design))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), design)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), did)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">did</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), did))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), did)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), difficult)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">difficult</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), difficult))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), difficult)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), disappointed)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">disappointed</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), disappointed))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), disappointed)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), disappointing)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">disappointing</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), disappointing))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), disappointing)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), disappointment)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">disappointment</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), disappointment))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), disappointment)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), do)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">do</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), do))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), do)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), does)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">does</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), does))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), does)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), doesn)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">doesn</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), doesn))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), doesn)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), don)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">don</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), don))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), don)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), down)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">down</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), down))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), down)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), easy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">easy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), easy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), easy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), everything)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">everything</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), everything))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), everything)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), excellent)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">excellent</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), excellent))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), excellent)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), far)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">far</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), far))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), far)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), few)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">few</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), few))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), few)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), fine)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">fine</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), fine))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), fine)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), first)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">first</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), first))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), first)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), fits)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">fits</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), fits))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), fits)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), gets)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">gets</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), gets))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), gets)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), good)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">good</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), good))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), good)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), got)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">got</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), got))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), got)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), great)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">great</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), great))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), great)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), happy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">happy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), happy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), happy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), has)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">has</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), has))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), has)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), headset)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">headset</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), headset))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), headset)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), hear)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">hear</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), hear))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), hear)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), highly)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">highly</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), highly))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), highly)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), horrible)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">horrible</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), horrible))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), horrible)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), how)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">how</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), how))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), how)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), however)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">however</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), however))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), however)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), if)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">if</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), if))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), if)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), in)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">in</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), in))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), in)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), is)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">is</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), is))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), is)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), it)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">it</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), it))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), it)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), junk)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">junk</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), junk))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), junk)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), light)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">light</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), light))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), light)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), love)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">love</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), love))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), love)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), me)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">me</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), me))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), me)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), money)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">money</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), money))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), money)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), months)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">months</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), months))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), months)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), nice)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">nice</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), nice))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), nice)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), none)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">none</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), none))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), none)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), not)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">not</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), not))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), not)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), of)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">of</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), of))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), of)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), off)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">off</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), off))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), off)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), old)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">old</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), old))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), old)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), only)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">only</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), only))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), only)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), original)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">original</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), original))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), original)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), out)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">out</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), out))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), out)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), over)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">over</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), over))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), over)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), piece)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">piece</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), piece))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), piece)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), plug)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">plug</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), plug))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), plug)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), poor)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">poor</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), poor))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), poor)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), price)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">price</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), price))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), price)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), problem)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">problem</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), problem))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), problem)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), product)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">product</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), product))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), product)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), recommend)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">recommend</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), recommend))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), recommend)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), same)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">same</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), same))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), same)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), so)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">so</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), so))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), so)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), sound)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">sound</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), sound))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), sound)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), still)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">still</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), still))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), still)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), sturdy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">sturdy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), sturdy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), sturdy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), t)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">t</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), t))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), t)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), terrible)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">terrible</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), terrible))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), terrible)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), than)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">than</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), than))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), than)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), that)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">that</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), that))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), that)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), the)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">the</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), the))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), the)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), then)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">then</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), then))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), then)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), these)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">these</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), these))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), these)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), to)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">to</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), to))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), to)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), too)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">too</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), too))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), too)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), useless)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">useless</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), useless))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), useless)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), ve)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">ve</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), ve))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), ve)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), very)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">very</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), very))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), very)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), volume)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">volume</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), volume))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), volume)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), was)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">was</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), was))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), was)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), waste)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">waste</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), waste))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), waste)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), well)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">well</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), well))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), well)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), when)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">when</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), when))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), when)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), while)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">while</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), while))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), while)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), will)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">will</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), will))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), will)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), with)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">with</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), with))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), with)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), without)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">without</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), without))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), without)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), work)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">work</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), work))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), work)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), works)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">works</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), works))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), works)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), worst)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">worst</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), worst))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), worst)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), years)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">years</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), years))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), years)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), you)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">you</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), you))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), you)"/>
						</DerivedField>
					</LocalTransformations>
					<Segmentation multipleModelMethod="sum">
						<Segment id="1">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), at))"/>
									<MiningField name="float(tf(lowercase(Sentence), case))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.12195122">
									<True/>
									<Node score="0.55813956">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.16363637">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.15">
											<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.15">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.54418606">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.3">
											<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.0">
											<SimplePredicate field="float(tf(lowercase(Sentence), at))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.27272728">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.0">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.16363637">
											<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.52500004">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.05454546">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.3">
												<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.15">
											<SimplePredicate field="float(tf(lowercase(Sentence), case))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.4758621">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.4666667">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20000002">
										<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="2">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
								</MiningSchema>
								<Node score="-0.08427239">
									<True/>
									<Node score="0.4170846">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.13303041">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.45641467">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.09918994">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.05387686">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.2125637">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.09534449">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.2727939">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.13336131">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.396197">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.16960533">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.51239705">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.39008337">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08714629">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.46341833">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="3">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), off))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
								</MiningSchema>
								<Node score="-0.10468692">
									<True/>
									<Node score="0.37132195">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.10891466">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.112716265">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.10887245">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										</Node>
									</Node>
									<Node score="-0.36527205">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08009105">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.044106297">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.17296104">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.14656685">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.348681">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.13454643">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.08494134">
											<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.43732962">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13027626">
										<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.3010928">
											<SimplePredicate field="float(tf(lowercase(Sentence), off))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.36116225">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="4">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.08182566">
									<True/>
									<Node score="0.3321552">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08953163">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.0966241">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.08363297">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.46760678">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.3681639">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.41168267">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.35763925">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.37617612">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="5">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), you))"/>
								</MiningSchema>
								<Node score="0.07060597">
									<True/>
									<Node score="-0.35368967">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08042271">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.037030682">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.12742716">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.03715843">
											<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.10582138">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.3513239">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.16859968">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.033961684">
											<SimplePredicate field="float(tf(lowercase(Sentence), you))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.20466745">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.004652727">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
									</Node>
									<Node score="0.32305965">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.10486618">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.37180358">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.41186076">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3883074">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="6">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), headset))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.066157974">
									<True/>
									<Node score="0.32669875">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.37363026">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.35786986">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.0947148">
											<SimplePredicate field="float(tf(lowercase(Sentence), headset))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.39427555">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.33937398">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17868955">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="7">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.050402764">
									<True/>
									<Node score="-0.31604493">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.07769759">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.04229288">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.09834949">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.019529965">
											<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.11873772">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.35620654">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3823661">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.38930097">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.07053678">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.30618066">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.35602152">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="8">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.0665783">
									<True/>
									<Node score="0.32915193">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2805021">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3879769">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.077457756">
										<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.1865392">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.02846584">
												<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.30551463">
											<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.29597324">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2706221">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="9">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), you))"/>
								</MiningSchema>
								<Node score="-0.013771284">
									<True/>
									<Node score="-0.30616987">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.07542765">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.0055279573">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.16254684">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.031742666">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.026053293">
											<SimplePredicate field="float(tf(lowercase(Sentence), you))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.31436872">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.28557193">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.04202903">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.3312106">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.3742426">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.27899316">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="10">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), waste))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), quality)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">quality</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), quality))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), quality)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.010531813">
									<True/>
									<Node score="-0.38333136">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11679389">
										<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.2343626">
											<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="1.5"/>
										</Node>
										<Node score="0.39625546">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.053944368">
												<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.1627719">
											<SimplePredicate field="float(tf(lowercase(Sentence), quality))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.26610285">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.339006">
										<SimplePredicate field="float(tf(lowercase(Sentence), waste))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.28089303">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.010990284">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.06753078">
												<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.07206185">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.2959838">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.28407925">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="11">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.054077636">
									<True/>
									<Node score="-0.2974222">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.09289397">
											<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.011086943">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.13230711">
												<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
											</Node>
											<Node score="-2.8663417E-4">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.012110418">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.061659846">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.09008898">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.32524124">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3149284">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3140418">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.34272826">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.28108552">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="12">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="-0.0652028">
									<True/>
									<Node score="0.31485677">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21785997">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.33291647">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.12471507">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.039451707">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.054114643">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.30909598">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.060094733">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.25500938">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.19933781">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.0029069483">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.3221932">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="13">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointing))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
								</MiningSchema>
								<Node score="0.04745836">
									<True/>
									<Node score="-0.3332249">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3134693">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.072992705">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.30131382">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.08270549">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.28144914">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15889822">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.076449595">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.38501337">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointing))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="14">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), cases))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
								</MiningSchema>
								<Node score="-0.04774119">
									<True/>
									<Node score="0.20894903">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.282658">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.37961945">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.26531142">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.06381992">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.067777194">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.30108252">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.35586885">
										<SimplePredicate field="float(tf(lowercase(Sentence), cases))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="15">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), doesn))"/>
									<MiningField name="float(tf(lowercase(Sentence), don))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="0.05844351">
									<True/>
									<Node score="0.058036752">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.082387246">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.3298616">
											<SimplePredicate field="float(tf(lowercase(Sentence), don))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.031699874">
												<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.27042025">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.19272684">
											<SimplePredicate field="float(tf(lowercase(Sentence), doesn))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.0099859405">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.2847419">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.29246458">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.08452511">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.26733118">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.122440614">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
											<Node score="0.18814673">
												<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.16596633">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.20331411">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.017823666">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.29649207">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="16">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), difficult))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
								</MiningSchema>
								<Node score="0.011624031">
									<True/>
									<Node score="-0.3696162">
										<SimplePredicate field="float(tf(lowercase(Sentence), difficult))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2831293">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.28453472">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.29903224">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.28626493">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15378815">
										<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="17">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), awesome))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
								</MiningSchema>
								<Node score="-0.025060982">
									<True/>
									<Node score="0.2947415">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2820738">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.27272904">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23330665">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.35967734">
										<SimplePredicate field="float(tf(lowercase(Sentence), awesome))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.26264563">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="18">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), sturdy))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.03608781">
									<True/>
									<Node score="0.25065604">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.26321134">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22588508">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21559562">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21019942">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.3111317">
										<SimplePredicate field="float(tf(lowercase(Sentence), sturdy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="19">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), disappointing))"/>
									<MiningField name="float(tf(lowercase(Sentence), none))"/>
									<MiningField name="float(tf(lowercase(Sentence), old))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), waste))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.031417497">
									<True/>
									<Node score="-0.27322912">
										<SimplePredicate field="float(tf(lowercase(Sentence), waste))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3274482">
										<SimplePredicate field="float(tf(lowercase(Sentence), old))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.33438146">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointing))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.24646339">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2634656">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.32034615">
										<SimplePredicate field="float(tf(lowercase(Sentence), none))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="20">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), cell))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), far))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), only))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="-0.021877535">
									<True/>
									<Node score="0.24326551">
										<SimplePredicate field="float(tf(lowercase(Sentence), cell))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2292888">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.3265434">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.035036266">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.24753799">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.049337033">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.25870016">
										<SimplePredicate field="float(tf(lowercase(Sentence), far))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.3035861">
										<SimplePredicate field="float(tf(lowercase(Sentence), only))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="21">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), at))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointment))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
								</MiningSchema>
								<Node score="0.011069372">
									<True/>
									<Node score="-0.30944103">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointment))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.23816179">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08246577">
											<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.032130856">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.038495306">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.031827256">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.2435534">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.31964248">
										<SimplePredicate field="float(tf(lowercase(Sentence), at))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.013011211">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.23055458">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23709838">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="22">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), difficult))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), these))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
								</MiningSchema>
								<Node score="-0.037805904">
									<True/>
									<Node score="-0.07457465">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.24146359">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.31338573">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.30471957">
										<SimplePredicate field="float(tf(lowercase(Sentence), difficult))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23907961">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.04162676">
										<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.2938057">
											<SimplePredicate field="float(tf(lowercase(Sentence), these))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.09812122">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="23">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), awesome))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), fine))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), perfectly)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">perfectly</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), perfectly))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), perfectly)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.030292293">
									<True/>
									<Node score="0.30984843">
										<SimplePredicate field="float(tf(lowercase(Sentence), awesome))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.30558383">
										<SimplePredicate field="float(tf(lowercase(Sentence), perfectly))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20708078">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.027339494">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.040801972">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.20358455">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2501937">
										<SimplePredicate field="float(tf(lowercase(Sentence), fine))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23496458">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="24">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), horrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), you))"/>
								</MiningSchema>
								<Node score="0.028887836">
									<True/>
									<Node score="-0.248106">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2811884">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20933437">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.07835134">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.02860448">
											<SimplePredicate field="float(tf(lowercase(Sentence), you))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.05774697">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.2908719">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.27341267">
										<SimplePredicate field="float(tf(lowercase(Sentence), horrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.24325287">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="25">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), has))"/>
									<MiningField name="float(tf(lowercase(Sentence), old))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
								</MiningSchema>
								<Node score="0.010342445">
									<True/>
									<Node score="-0.2606851">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.28802007">
										<SimplePredicate field="float(tf(lowercase(Sentence), old))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.25128904">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20300883">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.19339631">
											<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.013768196">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.2836978">
										<SimplePredicate field="float(tf(lowercase(Sentence), has))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.09022385">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.31779683">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="26">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), junk))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), that))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.021891637">
									<True/>
									<Node score="-0.2154139">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.26130283">
										<SimplePredicate field="float(tf(lowercase(Sentence), junk))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2352765">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.24049707">
										<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.04304819">
											<SimplePredicate field="float(tf(lowercase(Sentence), that))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.2838194">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.02980374">
											<SimplePredicate field="float(tf(lowercase(Sentence), that))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.1611669">
										<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="27">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), cases))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointing))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointment))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
								</MiningSchema>
								<Node score="-0.006483823">
									<True/>
									<Node score="0.2401944">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.29352853">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointing))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22813906">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2708642">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointment))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20304836">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.03762595">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.26902857">
										<SimplePredicate field="float(tf(lowercase(Sentence), cases))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="28">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), cell))"/>
									<MiningField name="float(tf(lowercase(Sentence), difficult))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), none))"/>
									<MiningField name="float(tf(lowercase(Sentence), plug))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="0.0051431423">
									<True/>
									<Node score="-0.2663436">
										<SimplePredicate field="float(tf(lowercase(Sentence), none))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.24015985">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.26304585">
										<SimplePredicate field="float(tf(lowercase(Sentence), plug))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22018516">
										<SimplePredicate field="float(tf(lowercase(Sentence), cell))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.23792426">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.26706275">
										<SimplePredicate field="float(tf(lowercase(Sentence), difficult))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="29">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), awesome))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), sturdy))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), pleased)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">pleased</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), pleased))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), pleased)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.02657623">
									<True/>
									<Node score="0.2663057">
										<SimplePredicate field="float(tf(lowercase(Sentence), pleased))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.18575521">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20757534">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20857695">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.25705245">
										<SimplePredicate field="float(tf(lowercase(Sentence), sturdy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.25828257">
										<SimplePredicate field="float(tf(lowercase(Sentence), awesome))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="30">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), horrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), useless))"/>
									<MiningField name="float(tf(lowercase(Sentence), waste))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), easily)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">easily</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), easily))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), easily)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.029351853">
									<True/>
									<Node score="-0.24902181">
										<SimplePredicate field="float(tf(lowercase(Sentence), useless))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22796173">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.26269442">
										<SimplePredicate field="float(tf(lowercase(Sentence), easily))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22944017">
										<SimplePredicate field="float(tf(lowercase(Sentence), waste))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2411797">
										<SimplePredicate field="float(tf(lowercase(Sentence), horrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08932501">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="31">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), highly))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="-0.028610714">
									<True/>
									<Node score="0.22050552">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13588181">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.23049273">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.012653431">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.05479785">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.23979676">
											<SimplePredicate field="float(tf(lowercase(Sentence), highly))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.19187966">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21084373">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21221493">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="32">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), only))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), these))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="-6.6155E-4">
									<True/>
									<Node score="-0.23051734">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.28397846">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.02790866">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.21568418">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.03656369">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.08326557">
										<SimplePredicate field="float(tf(lowercase(Sentence), these))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.27358595">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.24524821">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17907588">
										<SimplePredicate field="float(tf(lowercase(Sentence), only))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="33">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), old))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="-0.0044622766">
									<True/>
									<Node score="-0.25284594">
										<SimplePredicate field="float(tf(lowercase(Sentence), old))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14635581">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22335075">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15783767">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.040725313">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.18031564">
												<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
											</Node>
										</Node>
										<Node score="-0.031656098">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.15046321">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.0652129">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="2.5"/>
										</Node>
									</Node>
									<Node score="0.10333704">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="34">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), difficult))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), junk))"/>
									<MiningField name="float(tf(lowercase(Sentence), none))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), return)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">return</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), return))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), return)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.022511225">
									<True/>
									<Node score="-0.21815759">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22464944">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22907366">
										<SimplePredicate field="float(tf(lowercase(Sentence), junk))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.23826046">
										<SimplePredicate field="float(tf(lowercase(Sentence), difficult))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2345494">
										<SimplePredicate field="float(tf(lowercase(Sentence), return))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.23303494">
										<SimplePredicate field="float(tf(lowercase(Sentence), none))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="35">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), off))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), broke)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">broke</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), broke))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), broke)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.0110266525">
									<True/>
									<Node score="-0.24443975">
										<SimplePredicate field="float(tf(lowercase(Sentence), broke))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.064964354">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.19837847">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.21628405">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.25758108">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15268087">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.11547681">
											<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.22763029">
										<SimplePredicate field="float(tf(lowercase(Sentence), off))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="36">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointment))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), useless))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.01880629">
									<True/>
									<Node score="-0.21285605">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22290689">
										<SimplePredicate field="float(tf(lowercase(Sentence), useless))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20923781">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.23172697">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointment))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19587652">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2143256">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="37">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), fine))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
								</MiningSchema>
								<Node score="-0.018032651">
									<True/>
									<Node score="0.2003447">
										<SimplePredicate field="float(tf(lowercase(Sentence), fine))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16367313">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14417876">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19254456">
										<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="1.5"/>
									</Node>
									<Node score="0.23933756">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22620484">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="38">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), gets))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), old))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
								</MiningSchema>
								<Node score="0.012348936">
									<True/>
									<Node score="-0.18167731">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.22728927">
										<SimplePredicate field="float(tf(lowercase(Sentence), old))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23365112">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23827255">
										<SimplePredicate field="float(tf(lowercase(Sentence), gets))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.16848466">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.04722369">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.24205704">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="39">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), plug))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), same))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), within)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">within</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), within))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), within)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.010888499">
									<True/>
									<Node score="-0.22671467">
										<SimplePredicate field="float(tf(lowercase(Sentence), within))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20107463">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2053571">
										<SimplePredicate field="float(tf(lowercase(Sentence), plug))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2089638">
										<SimplePredicate field="float(tf(lowercase(Sentence), same))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23545314">
										<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20389333">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="40">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), far))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), only))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.0031078148">
									<True/>
									<Node score="0.17120263">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15759586">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.006882092">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.099199876">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.28770748">
											<SimplePredicate field="float(tf(lowercase(Sentence), far))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.17248929">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.19993287">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.21812847">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18433772">
										<SimplePredicate field="float(tf(lowercase(Sentence), only))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="41">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), over))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
								</MiningSchema>
								<Node score="0.01078849">
									<True/>
									<Node score="0.19410826">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1898608">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.037949853">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.021045981">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.1614178">
												<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
											</Node>
										</Node>
										<Node score="-0.24287963">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.06076727">
												<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.13181682">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.22404507">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12534066">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.06110585">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.30991614">
										<SimplePredicate field="float(tf(lowercase(Sentence), over))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="42">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), highly))"/>
									<MiningField name="float(tf(lowercase(Sentence), how))"/>
									<MiningField name="float(tf(lowercase(Sentence), original))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="-0.02099476">
									<True/>
									<Node score="0.21216764">
										<SimplePredicate field="float(tf(lowercase(Sentence), original))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.06643434">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.2565407">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.054623302">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.230108">
										<SimplePredicate field="float(tf(lowercase(Sentence), how))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22799498">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.053278536">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.2017888">
											<SimplePredicate field="float(tf(lowercase(Sentence), highly))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.119602814">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="43">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), 5))"/>
									<MiningField name="float(tf(lowercase(Sentence), horrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), however))"/>
									<MiningField name="float(tf(lowercase(Sentence), junk))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="0.010966906">
									<True/>
									<Node score="-0.20470452">
										<SimplePredicate field="float(tf(lowercase(Sentence), junk))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20834008">
										<SimplePredicate field="float(tf(lowercase(Sentence), horrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19977133">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18499309">
										<SimplePredicate field="float(tf(lowercase(Sentence), 5))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.25598368">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.05750175">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.2087839">
										<SimplePredicate field="float(tf(lowercase(Sentence), however))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="44">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), at))"/>
									<MiningField name="float(tf(lowercase(Sentence), both))"/>
									<MiningField name="float(tf(lowercase(Sentence), completely))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), got))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
								</MiningSchema>
								<Node score="-0.00841913">
									<True/>
									<Node score="0.19949006">
										<SimplePredicate field="float(tf(lowercase(Sentence), both))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.25160307">
										<SimplePredicate field="float(tf(lowercase(Sentence), completely))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.16898152">
										<SimplePredicate field="float(tf(lowercase(Sentence), at))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15576386">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21480343">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.19466342">
										<SimplePredicate field="float(tf(lowercase(Sentence), got))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="45">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), 3)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">3</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), 3))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), 3)"/>
									</DerivedField>
									<DerivedField name="tf(lowercase(Sentence), say)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">say</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), say))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), say)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.0143404715">
									<True/>
									<Node score="0.18970373">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.19214563">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20078728">
										<SimplePredicate field="float(tf(lowercase(Sentence), say))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16844112">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.21724068">
										<SimplePredicate field="float(tf(lowercase(Sentence), 3))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12856448">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="46">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), design))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), waste))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.013468311">
									<True/>
									<Node score="-0.1887638">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19129278">
										<SimplePredicate field="float(tf(lowercase(Sentence), waste))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18853465">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1600357">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.22370549">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17107178">
										<SimplePredicate field="float(tf(lowercase(Sentence), design))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="47">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), far))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="-0.007529317">
									<True/>
									<Node score="0.14812171">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.0130403945">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.07997116">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.2504545">
											<SimplePredicate field="float(tf(lowercase(Sentence), far))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.1520128">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.24592508">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.09980299">
											<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.03859833">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.087548">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.19655159">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.0015711727">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.20017768">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.20040068">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="48">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), cell))"/>
									<MiningField name="float(tf(lowercase(Sentence), do))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), problem))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
								</MiningSchema>
								<Node score="0.0033219429">
									<True/>
									<Node score="0.16298339">
										<SimplePredicate field="float(tf(lowercase(Sentence), cell))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.2008334">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.026610466">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.045120653">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.22575457">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.2697922">
										<SimplePredicate field="float(tf(lowercase(Sentence), problem))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.0032889086">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.20283054">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18693534">
										<SimplePredicate field="float(tf(lowercase(Sentence), do))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="49">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), design))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), hours)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">hours</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), hours))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), hours)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.003251081">
									<True/>
									<Node score="-0.19092108">
										<SimplePredicate field="float(tf(lowercase(Sentence), hours))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17694473">
										<SimplePredicate field="float(tf(lowercase(Sentence), design))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16969013">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21025887">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.23246667">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.020190695">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.09310563">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="50">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), doesn))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), junk))"/>
									<MiningField name="float(tf(lowercase(Sentence), out))"/>
									<MiningField name="float(tf(lowercase(Sentence), poor))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
								</MiningSchema>
								<Node score="0.019275812">
									<True/>
									<Node score="-0.18361129">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17895393">
										<SimplePredicate field="float(tf(lowercase(Sentence), poor))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1846248">
										<SimplePredicate field="float(tf(lowercase(Sentence), junk))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.0886883">
										<SimplePredicate field="float(tf(lowercase(Sentence), out))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.24531077">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.09946674">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.18432707">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15300418">
										<SimplePredicate field="float(tf(lowercase(Sentence), doesn))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="51">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), both))"/>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="-0.0059011625">
									<True/>
									<Node score="0.1691167">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17380498">
										<SimplePredicate field="float(tf(lowercase(Sentence), both))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.043584235">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.1945097">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.15492983">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.036873814">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.21460706">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.12075647">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="52">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), original))"/>
									<MiningField name="float(tf(lowercase(Sentence), over))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.009098295">
									<True/>
									<Node score="0.14958785">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.029623527">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.14643116">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19008131">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17353503">
										<SimplePredicate field="float(tf(lowercase(Sentence), original))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.2026808">
										<SimplePredicate field="float(tf(lowercase(Sentence), over))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.21153396">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="53">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), calls))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), last)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">last</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), last))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), last)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.0057313032">
									<True/>
									<Node score="0.17544019">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12391467">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.21309175">
										<SimplePredicate field="float(tf(lowercase(Sentence), last))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18100134">
										<SimplePredicate field="float(tf(lowercase(Sentence), calls))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16912296">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.19172183">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="54">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bad))"/>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), waste))"/>
									<MiningField name="float(tf(lowercase(Sentence), worst))"/>
								</MiningSchema>
								<Node score="0.011893514">
									<True/>
									<Node score="-0.17435682">
										<SimplePredicate field="float(tf(lowercase(Sentence), worst))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17205465">
										<SimplePredicate field="float(tf(lowercase(Sentence), bad))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.17400494">
										<SimplePredicate field="float(tf(lowercase(Sentence), waste))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14801927">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.19424936">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1435497">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="55">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), cell))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), love))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="0.0032983276">
									<True/>
									<Node score="0.16969688">
										<SimplePredicate field="float(tf(lowercase(Sentence), love))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15488663">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13373779">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14795959">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1334142">
										<SimplePredicate field="float(tf(lowercase(Sentence), cell))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.04741335">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="56">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), that))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
									<MiningField name="float(tf(lowercase(Sentence), when))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="0.004502152">
									<True/>
									<Node score="0.26359084">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.0588317">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.10054331">
												<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
												<Node score="-0.14968383">
													<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
													<Node score="-0.018329924">
														<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
													</Node>
												</Node>
												<Node score="0.15055847">
													<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
												</Node>
												<Node score="-0.014229144">
													<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
												</Node>
											</Node>
											<Node score="0.053003885">
												<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
											</Node>
											<Node score="-0.191906">
												<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
											</Node>
											<Node score="-0.1212948">
												<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
											</Node>
										</Node>
										<Node score="-0.10767497">
											<SimplePredicate field="float(tf(lowercase(Sentence), that))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.08524951">
											<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.016998934">
											<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.11021379">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.23537928">
										<SimplePredicate field="float(tf(lowercase(Sentence), when))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.193785">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.12586829">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.16477206">
												<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
											</Node>
											<Node score="-0.11589388">
												<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.039736964">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										</Node>
									</Node>
									<Node score="-0.2343631">
										<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.042059295">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.21467653">
										<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.010675272">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.11754707">
										<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="57">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), calls))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), disappointed))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), plug))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="-0.006639374">
									<True/>
									<Node score="-0.17401277">
										<SimplePredicate field="float(tf(lowercase(Sentence), disappointed))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.16048676">
										<SimplePredicate field="float(tf(lowercase(Sentence), plug))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.0047041606">
										<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.07803382">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="1.5"/>
										</Node>
										<Node score="0.22813852">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.106080346">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.17383993">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.009069716">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.16401331">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18812613">
										<SimplePredicate field="float(tf(lowercase(Sentence), calls))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="58">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), camera))"/>
									<MiningField name="float(tf(lowercase(Sentence), does))"/>
									<MiningField name="float(tf(lowercase(Sentence), fine))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), too))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), work))"/>
								</MiningSchema>
								<Node score="-0.0038933824">
									<True/>
									<Node score="0.1534124">
										<SimplePredicate field="float(tf(lowercase(Sentence), fine))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14509314">
										<SimplePredicate field="float(tf(lowercase(Sentence), work))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1879149">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
										<Node score="5.669063E-4">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.17399485">
										<SimplePredicate field="float(tf(lowercase(Sentence), camera))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12797575">
										<SimplePredicate field="float(tf(lowercase(Sentence), does))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14400315">
										<SimplePredicate field="float(tf(lowercase(Sentence), too))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="59">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), few))"/>
									<MiningField name="float(tf(lowercase(Sentence), gets))"/>
									<MiningField name="float(tf(lowercase(Sentence), still))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
									<MiningField name="float(tf(lowercase(Sentence), these))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
								</MiningSchema>
								<Node score="-8.434924E-4">
									<True/>
									<Node score="-0.1516013">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14236021">
										<SimplePredicate field="float(tf(lowercase(Sentence), still))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17665258">
										<SimplePredicate field="float(tf(lowercase(Sentence), gets))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1264083">
										<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14180857">
										<SimplePredicate field="float(tf(lowercase(Sentence), these))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.20954381">
										<SimplePredicate field="float(tf(lowercase(Sentence), few))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="60">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), volume))"/>
								</MiningSchema>
								<Node score="-0.0016160028">
									<True/>
									<Node score="0.10073705">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.20519032">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.07754889">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.013674643">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.15721613">
										<SimplePredicate field="float(tf(lowercase(Sentence), volume))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1631398">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1484212">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.18822762">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.049095403">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.160644">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="61">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), problem))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
									<MiningField name="float(tf(lowercase(Sentence), years))"/>
								</MiningSchema>
								<Node score="-0.009355561">
									<True/>
									<Node score="0.13586077">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14785986">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14382385">
										<SimplePredicate field="float(tf(lowercase(Sentence), years))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14110877">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12825371">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14909093">
										<SimplePredicate field="float(tf(lowercase(Sentence), problem))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="62">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), how))"/>
									<MiningField name="float(tf(lowercase(Sentence), however))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), over))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
									<MiningField name="float(tf(lowercase(Sentence), volume))"/>
								</MiningSchema>
								<Node score="0.018521205">
									<True/>
									<Node score="-0.15155086">
										<SimplePredicate field="float(tf(lowercase(Sentence), however))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14386362">
										<SimplePredicate field="float(tf(lowercase(Sentence), how))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12736535">
										<SimplePredicate field="float(tf(lowercase(Sentence), volume))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12917787">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12652811">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.18338716">
										<SimplePredicate field="float(tf(lowercase(Sentence), over))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="63">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), buy))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), will))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.0065251556">
									<True/>
									<Node score="0.105132654">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.124362834">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13689116">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13426663">
										<SimplePredicate field="float(tf(lowercase(Sentence), buy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17638484">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14478987">
										<SimplePredicate field="float(tf(lowercase(Sentence), will))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="64">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), could))"/>
									<MiningField name="float(tf(lowercase(Sentence), light))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), these))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="-0.014090666">
									<True/>
									<Node score="-0.13465026">
										<SimplePredicate field="float(tf(lowercase(Sentence), could))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14135648">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14036481">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11676524">
										<SimplePredicate field="float(tf(lowercase(Sentence), these))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.18801741">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.02495337">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.15328926">
										<SimplePredicate field="float(tf(lowercase(Sentence), light))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="65">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), 5))"/>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), be))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
								</MiningSchema>
								<Node score="0.012376502">
									<True/>
									<Node score="-0.14483885">
										<SimplePredicate field="float(tf(lowercase(Sentence), 5))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.052941013">
										<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.15625618">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.19463174">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.03652595">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.012833748">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.21254997">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.23181732">
										<SimplePredicate field="float(tf(lowercase(Sentence), be))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.13351567">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.09784397">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="66">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), has))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), sound))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="-0.0093006985">
									<True/>
									<Node score="0.08663495">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.1922713">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.050953373">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.005250582">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.15369275">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17820951">
										<SimplePredicate field="float(tf(lowercase(Sentence), has))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.022039972">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.06650836">
										<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.20251879">
											<SimplePredicate field="float(tf(lowercase(Sentence), sound))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.1294927">
											<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.13505761">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.13403831">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.15953657">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="67">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), could))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), months))"/>
									<MiningField name="float(tf(lowercase(Sentence), still))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), then))"/>
								</MiningSchema>
								<Node score="0.0041641016">
									<True/>
									<Node score="-0.14119971">
										<SimplePredicate field="float(tf(lowercase(Sentence), then))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13010567">
										<SimplePredicate field="float(tf(lowercase(Sentence), months))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12587297">
										<SimplePredicate field="float(tf(lowercase(Sentence), still))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.120619185">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12968485">
										<SimplePredicate field="float(tf(lowercase(Sentence), could))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11833292">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="2.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="68">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), at))"/>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), both))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), light))"/>
									<MiningField name="float(tf(lowercase(Sentence), too))"/>
								</MiningSchema>
								<Node score="-0.0027925337">
									<True/>
									<Node score="0.14346701">
										<SimplePredicate field="float(tf(lowercase(Sentence), both))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13041432">
										<SimplePredicate field="float(tf(lowercase(Sentence), at))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1287915">
										<SimplePredicate field="float(tf(lowercase(Sentence), too))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16751297">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15914212">
										<SimplePredicate field="float(tf(lowercase(Sentence), light))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15144956">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="69">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), calls))"/>
									<MiningField name="float(tf(lowercase(Sentence), completely))"/>
									<MiningField name="float(tf(lowercase(Sentence), do))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), days)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">days</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), days))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), days)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.009422526">
									<True/>
									<Node score="-0.1308515">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13909824">
										<SimplePredicate field="float(tf(lowercase(Sentence), days))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.035982393">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.20665067">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.12357255">
										<SimplePredicate field="float(tf(lowercase(Sentence), do))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12663752">
										<SimplePredicate field="float(tf(lowercase(Sentence), calls))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12266737">
										<SimplePredicate field="float(tf(lowercase(Sentence), completely))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="70">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), 5))"/>
									<MiningField name="float(tf(lowercase(Sentence), cell))"/>
									<MiningField name="float(tf(lowercase(Sentence), few))"/>
									<MiningField name="float(tf(lowercase(Sentence), headset))"/>
									<MiningField name="float(tf(lowercase(Sentence), too))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
								</MiningSchema>
								<Node score="0.005921763">
									<True/>
									<Node score="-0.12819688">
										<SimplePredicate field="float(tf(lowercase(Sentence), 5))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.10769305">
										<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15750535">
										<SimplePredicate field="float(tf(lowercase(Sentence), few))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.18868749">
										<SimplePredicate field="float(tf(lowercase(Sentence), cell))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10942614">
										<SimplePredicate field="float(tf(lowercase(Sentence), too))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.07929242">
										<SimplePredicate field="float(tf(lowercase(Sentence), headset))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="71">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
								</MiningSchema>
								<Node score="-0.010680312">
									<True/>
									<Node score="0.08574882">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.13800885">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.061286427">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.12784815">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11021388">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.10556441">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14007832">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.083541244">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.11080747">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="72">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), camera))"/>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), fine))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), months))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), work))"/>
								</MiningSchema>
								<Node score="-0.004198988">
									<True/>
									<Node score="-0.124014564">
										<SimplePredicate field="float(tf(lowercase(Sentence), months))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1303182">
										<SimplePredicate field="float(tf(lowercase(Sentence), fine))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1409987">
										<SimplePredicate field="float(tf(lowercase(Sentence), work))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.03801912">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.15529916">
										<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.17393076">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.010776561">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.14095119">
										<SimplePredicate field="float(tf(lowercase(Sentence), camera))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="73">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), same))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), volume))"/>
								</MiningSchema>
								<Node score="-7.69147E-4">
									<True/>
									<Node score="-0.13869417">
										<SimplePredicate field="float(tf(lowercase(Sentence), same))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14944813">
										<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.022010406">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.20242527">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.029731372">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="4.6476835E-4">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.2043855">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.11214277">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.14211732">
										<SimplePredicate field="float(tf(lowercase(Sentence), volume))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="74">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), both))"/>
									<MiningField name="float(tf(lowercase(Sentence), design))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), how))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="0.010470917">
									<True/>
									<Node score="0.13494886">
										<SimplePredicate field="float(tf(lowercase(Sentence), both))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.026825355">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.13903822">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.11516606">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11892558">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11984301">
										<SimplePredicate field="float(tf(lowercase(Sentence), how))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.110961795">
										<SimplePredicate field="float(tf(lowercase(Sentence), design))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="75">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), product))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), sound))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), very))"/>
									<MiningField name="float(tf(lowercase(Sentence), when))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), charge)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">charge</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), charge))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), charge)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.011895712">
									<True/>
									<Node score="0.13220832">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15773638">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.049419966">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.16080716">
												<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
											</Node>
											<Node score="0.11352006">
												<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
											</Node>
											<Node score="0.09711589">
												<SimplePredicate field="float(tf(lowercase(Sentence), sound))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.079203285">
											<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.020213205">
											<SimplePredicate field="float(tf(lowercase(Sentence), very))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.19013745">
										<SimplePredicate field="float(tf(lowercase(Sentence), when))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.21530373">
										<SimplePredicate field="float(tf(lowercase(Sentence), charge))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12856586">
										<SimplePredicate field="float(tf(lowercase(Sentence), product))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1874459">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="76">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), better))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), that))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), years))"/>
								</MiningSchema>
								<Node score="5.6694006E-4">
									<True/>
									<Node score="0.12736073">
										<SimplePredicate field="float(tf(lowercase(Sentence), years))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.21879892">
										<SimplePredicate field="float(tf(lowercase(Sentence), that))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.11585313">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.038941823">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
											<Node score="0.10968939">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="-0.040611662">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										</Node>
									</Node>
									<Node score="0.17301533">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.03354098">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.14777768">
											<SimplePredicate field="float(tf(lowercase(Sentence), better))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.121828355">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="2.5"/>
									</Node>
									<Node score="-0.10605652">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="77">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), down))"/>
									<MiningField name="float(tf(lowercase(Sentence), if))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), of))"/>
									<MiningField name="float(tf(lowercase(Sentence), out))"/>
									<MiningField name="float(tf(lowercase(Sentence), you))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), talk)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">talk</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), talk))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), talk)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.015883906">
									<True/>
									<Node score="-0.11723374">
										<SimplePredicate field="float(tf(lowercase(Sentence), down))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12068289">
										<SimplePredicate field="float(tf(lowercase(Sentence), talk))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13712958">
										<SimplePredicate field="float(tf(lowercase(Sentence), you))" operator="greaterOrEqual" value="1.5"/>
									</Node>
									<Node score="-0.18962194">
										<SimplePredicate field="float(tf(lowercase(Sentence), out))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.01466444">
											<SimplePredicate field="float(tf(lowercase(Sentence), of))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.029552156">
										<SimplePredicate field="float(tf(lowercase(Sentence), if))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.12665842">
											<SimplePredicate field="float(tf(lowercase(Sentence), you))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.08096805">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="78">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), product))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), when))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.028224045">
									<True/>
									<Node score="0.11615146">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11402856">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.10600356">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.0657295">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.21153915">
											<SimplePredicate field="float(tf(lowercase(Sentence), product))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.043227717">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.16151258">
										<SimplePredicate field="float(tf(lowercase(Sentence), when))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.04587844">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="79">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), far))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), over))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
								</MiningSchema>
								<Node score="-0.001911333">
									<True/>
									<Node score="-0.10683329">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13822284">
										<SimplePredicate field="float(tf(lowercase(Sentence), over))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16869336">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.073378935">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.07086378">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.20556618">
											<SimplePredicate field="float(tf(lowercase(Sentence), far))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.11910737">
										<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="1.5"/>
										<Node score="-0.02629359">
											<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.15261298">
										<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="1.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="80">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), has))"/>
									<MiningField name="float(tf(lowercase(Sentence), however))"/>
									<MiningField name="float(tf(lowercase(Sentence), months))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="-0.0015662492">
									<True/>
									<Node score="-0.13614877">
										<SimplePredicate field="float(tf(lowercase(Sentence), however))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10722648">
										<SimplePredicate field="float(tf(lowercase(Sentence), months))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13133238">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.001662854">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.029972063">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="2.5"/>
										<Node score="0.18377893">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.19201744">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1249583">
										<SimplePredicate field="float(tf(lowercase(Sentence), has))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="81">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), don))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), there)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">there</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), there))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), there)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.006170787">
									<True/>
									<Node score="-0.11244779">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.027431624">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.004236778">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.15850575">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.12428605">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11374928">
										<SimplePredicate field="float(tf(lowercase(Sentence), don))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.13527417">
										<SimplePredicate field="float(tf(lowercase(Sentence), there))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.15072413">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="82">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), fits))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), than))"/>
									<MiningField name="float(tf(lowercase(Sentence), that))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
									<MiningField name="float(tf(lowercase(Sentence), years))"/>
								</MiningSchema>
								<Node score="-0.0068773828">
									<True/>
									<Node score="0.108577356">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11140313">
										<SimplePredicate field="float(tf(lowercase(Sentence), years))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.111831166">
										<SimplePredicate field="float(tf(lowercase(Sentence), fits))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12829898">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11315886">
										<SimplePredicate field="float(tf(lowercase(Sentence), that))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.08588874">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.12330105">
										<SimplePredicate field="float(tf(lowercase(Sentence), than))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="83">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), don))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), terrible))"/>
									<MiningField name="float(tf(lowercase(Sentence), while))"/>
								</MiningSchema>
								<Node score="0.010012612">
									<True/>
									<Node score="-0.18104154">
										<SimplePredicate field="float(tf(lowercase(Sentence), terrible))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11579648">
										<SimplePredicate field="float(tf(lowercase(Sentence), while))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1785472">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1404257">
										<SimplePredicate field="float(tf(lowercase(Sentence), don))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.14307138">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10064438">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="1.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="84">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), do))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), problem))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), without))"/>
								</MiningSchema>
								<Node score="-0.003919434">
									<True/>
									<Node score="0.09804099">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.112619705">
										<SimplePredicate field="float(tf(lowercase(Sentence), without))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1053901">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.13481683">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.018009614">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.112951">
										<SimplePredicate field="float(tf(lowercase(Sentence), problem))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15575221">
										<SimplePredicate field="float(tf(lowercase(Sentence), do))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="85">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), don))"/>
									<MiningField name="float(tf(lowercase(Sentence), easy))"/>
									<MiningField name="float(tf(lowercase(Sentence), hear))"/>
									<MiningField name="float(tf(lowercase(Sentence), while))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), back)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">back</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), back))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), back)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="0.0066134827">
									<True/>
									<Node score="-0.10594735">
										<SimplePredicate field="float(tf(lowercase(Sentence), back))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.10458562">
										<SimplePredicate field="float(tf(lowercase(Sentence), while))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.15516521">
										<SimplePredicate field="float(tf(lowercase(Sentence), hear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.120368265">
										<SimplePredicate field="float(tf(lowercase(Sentence), don))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11392957">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.1264338">
										<SimplePredicate field="float(tf(lowercase(Sentence), easy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="86">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), been))"/>
									<MiningField name="float(tf(lowercase(Sentence), cool))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), got))"/>
									<MiningField name="float(tf(lowercase(Sentence), headset))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="-0.0084995935">
									<True/>
									<Node score="0.10999454">
										<SimplePredicate field="float(tf(lowercase(Sentence), been))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.10096994">
										<SimplePredicate field="float(tf(lowercase(Sentence), got))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.19234918">
										<SimplePredicate field="float(tf(lowercase(Sentence), headset))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.07773859">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.041339584">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.17583153">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.09498533">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.011401016">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.10363712">
										<SimplePredicate field="float(tf(lowercase(Sentence), cool))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="87">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), better))"/>
									<MiningField name="float(tf(lowercase(Sentence), down))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), while))"/>
								</MiningSchema>
								<Node score="0.012214606">
									<True/>
									<Node score="-0.10291666">
										<SimplePredicate field="float(tf(lowercase(Sentence), down))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10390972">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.07184915">
										<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="1.5"/>
									</Node>
									<Node score="0.12584212">
										<SimplePredicate field="float(tf(lowercase(Sentence), while))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.02219636">
										<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="1.5"/>
										<Node score="-0.13348052">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.091843724">
										<SimplePredicate field="float(tf(lowercase(Sentence), better))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="88">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), product))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), when))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="-0.024939384">
									<True/>
									<Node score="0.112587884">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.0810482">
										<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										<Node score="-0.12687661">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.14320563">
											<SimplePredicate field="float(tf(lowercase(Sentence), when))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.17050275">
											<SimplePredicate field="float(tf(lowercase(Sentence), product))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.004688166">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.13943274">
										<SimplePredicate field="float(tf(lowercase(Sentence), when))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.113740556">
										<SimplePredicate field="float(tf(lowercase(Sentence), product))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.16563675">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.06701479">
										<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="89">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), calls))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), completely))"/>
									<MiningField name="float(tf(lowercase(Sentence), got))"/>
									<MiningField name="float(tf(lowercase(Sentence), headset))"/>
									<MiningField name="float(tf(lowercase(Sentence), too))"/>
								</MiningSchema>
								<Node score="0.008222561">
									<True/>
									<Node score="0.10193899">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1668769">
										<SimplePredicate field="float(tf(lowercase(Sentence), calls))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.102634646">
										<SimplePredicate field="float(tf(lowercase(Sentence), too))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.109335944">
										<SimplePredicate field="float(tf(lowercase(Sentence), completely))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12447559">
										<SimplePredicate field="float(tf(lowercase(Sentence), got))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08072342">
										<SimplePredicate field="float(tf(lowercase(Sentence), headset))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="90">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), any))"/>
									<MiningField name="float(tf(lowercase(Sentence), do))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), me))"/>
									<MiningField name="float(tf(lowercase(Sentence), problem))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="0.00795927">
									<True/>
									<Node score="0.10438922">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09032136">
										<SimplePredicate field="float(tf(lowercase(Sentence), me))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.08514002">
										<SimplePredicate field="float(tf(lowercase(Sentence), any))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09840339">
										<SimplePredicate field="float(tf(lowercase(Sentence), problem))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.12607351">
										<SimplePredicate field="float(tf(lowercase(Sentence), do))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.047124255">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="91">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), clear))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), these))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), device)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">device</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), device))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), device)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="-0.009572222">
									<True/>
									<Node score="0.091781825">
										<SimplePredicate field="float(tf(lowercase(Sentence), device))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.0816057">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.11731297">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.16071357">
										<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.11072444">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-4.002441E-5">
												<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.0066023753">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.1639714">
										<SimplePredicate field="float(tf(lowercase(Sentence), clear))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12003913">
										<SimplePredicate field="float(tf(lowercase(Sentence), these))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="92">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), after))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), ve))"/>
									<MiningField name="float(tf(lowercase(Sentence), well))"/>
									<MiningField name="float(tf(lowercase(Sentence), years))"/>
									<MiningField name="lowercase(Sentence)"/>
								</MiningSchema>
								<LocalTransformations>
									<DerivedField name="tf(lowercase(Sentence), service)" optype="continuous" dataType="double">
										<Apply function="tf(lowercase(Sentence))">
											<FieldRef field="lowercase(Sentence)"/>
											<Constant dataType="string">service</Constant>
										</Apply>
									</DerivedField>
									<DerivedField name="float(tf(lowercase(Sentence), service))" optype="continuous" dataType="float">
										<FieldRef field="tf(lowercase(Sentence), service)"/>
									</DerivedField>
								</LocalTransformations>
								<Node score="9.904836E-4">
									<True/>
									<Node score="-0.09731786">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.104137234">
										<SimplePredicate field="float(tf(lowercase(Sentence), years))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08257486">
										<SimplePredicate field="float(tf(lowercase(Sentence), service))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.091718346">
										<SimplePredicate field="float(tf(lowercase(Sentence), well))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.0834595">
										<SimplePredicate field="float(tf(lowercase(Sentence), ve))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10082018">
										<SimplePredicate field="float(tf(lowercase(Sentence), after))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="93">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), comfortable))"/>
									<MiningField name="float(tf(lowercase(Sentence), design))"/>
									<MiningField name="float(tf(lowercase(Sentence), first))"/>
									<MiningField name="float(tf(lowercase(Sentence), only))"/>
									<MiningField name="float(tf(lowercase(Sentence), still))"/>
								</MiningSchema>
								<Node score="0.0038869611">
									<True/>
									<Node score="-0.09654152">
										<SimplePredicate field="float(tf(lowercase(Sentence), design))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.095882885">
										<SimplePredicate field="float(tf(lowercase(Sentence), first))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08772025">
										<SimplePredicate field="float(tf(lowercase(Sentence), still))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.12852637">
										<SimplePredicate field="float(tf(lowercase(Sentence), comfortable))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.09343141">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09665886">
										<SimplePredicate field="float(tf(lowercase(Sentence), only))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="94">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), did))"/>
									<MiningField name="float(tf(lowercase(Sentence), everything))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), work))"/>
									<MiningField name="float(tf(lowercase(Sentence), works))"/>
								</MiningSchema>
								<Node score="-0.0074783643">
									<True/>
									<Node score="0.100930385">
										<SimplePredicate field="float(tf(lowercase(Sentence), everything))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.09336425">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.092045076">
										<SimplePredicate field="float(tf(lowercase(Sentence), works))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.07922685">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.0039655515">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="0.009479744">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.08738149">
										<SimplePredicate field="float(tf(lowercase(Sentence), work))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.105510734">
										<SimplePredicate field="float(tf(lowercase(Sentence), did))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="95">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), at))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), nice))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), off))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), with))"/>
								</MiningSchema>
								<Node score="0.003868941">
									<True/>
									<Node score="0.16955596">
										<SimplePredicate field="float(tf(lowercase(Sentence), nice))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.033564124">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.039419524">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
											<Node score="-0.097598374">
												<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
											</Node>
										</Node>
										<Node score="0.16066243">
											<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.18579152">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.0032568271">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.03297977">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.015925303">
											<SimplePredicate field="float(tf(lowercase(Sentence), with))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.17093696">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.1393561">
										<SimplePredicate field="float(tf(lowercase(Sentence), off))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.11758855">
										<SimplePredicate field="float(tf(lowercase(Sentence), at))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="96">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), best))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), it))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), price))"/>
									<MiningField name="float(tf(lowercase(Sentence), t))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
									<MiningField name="float(tf(lowercase(Sentence), was))"/>
								</MiningSchema>
								<Node score="-0.0021752287">
									<True/>
									<Node score="0.09039458">
										<SimplePredicate field="float(tf(lowercase(Sentence), price))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.05700493">
										<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.104833394">
											<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.051119298">
											<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.15085821">
										<SimplePredicate field="float(tf(lowercase(Sentence), was))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.23802797">
											<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.13261239">
										<SimplePredicate field="float(tf(lowercase(Sentence), best))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.124414116">
										<SimplePredicate field="float(tf(lowercase(Sentence), it))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.046663187">
											<SimplePredicate field="float(tf(lowercase(Sentence), t))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.10118868">
										<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="1.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="97">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), does))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), is))"/>
									<MiningField name="float(tf(lowercase(Sentence), product))"/>
									<MiningField name="float(tf(lowercase(Sentence), recommend))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), volume))"/>
								</MiningSchema>
								<Node score="-0.003174212">
									<True/>
									<Node score="0.087786324">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.005799605">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.020417895">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="2.5"/>
										<Node score="0.12159508">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.12609716">
										<SimplePredicate field="float(tf(lowercase(Sentence), volume))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09781861">
										<SimplePredicate field="float(tf(lowercase(Sentence), product))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.036914285">
											<SimplePredicate field="float(tf(lowercase(Sentence), is))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.14108585">
										<SimplePredicate field="float(tf(lowercase(Sentence), recommend))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.09004761">
										<SimplePredicate field="float(tf(lowercase(Sentence), does))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="98">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), bluetooth))"/>
									<MiningField name="float(tf(lowercase(Sentence), buy))"/>
									<MiningField name="float(tf(lowercase(Sentence), case))"/>
									<MiningField name="float(tf(lowercase(Sentence), could))"/>
									<MiningField name="float(tf(lowercase(Sentence), while))"/>
									<MiningField name="float(tf(lowercase(Sentence), will))"/>
								</MiningSchema>
								<Node score="0.006897355">
									<True/>
									<Node score="-0.09044239">
										<SimplePredicate field="float(tf(lowercase(Sentence), could))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.09527021">
										<SimplePredicate field="float(tf(lowercase(Sentence), bluetooth))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.10053054">
										<SimplePredicate field="float(tf(lowercase(Sentence), buy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09358323">
										<SimplePredicate field="float(tf(lowercase(Sentence), will))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.113830835">
										<SimplePredicate field="float(tf(lowercase(Sentence), while))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09130103">
										<SimplePredicate field="float(tf(lowercase(Sentence), case))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="99">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), and))"/>
									<MiningField name="float(tf(lowercase(Sentence), excellent))"/>
									<MiningField name="float(tf(lowercase(Sentence), good))"/>
									<MiningField name="float(tf(lowercase(Sentence), happy))"/>
									<MiningField name="float(tf(lowercase(Sentence), not))"/>
									<MiningField name="float(tf(lowercase(Sentence), only))"/>
									<MiningField name="float(tf(lowercase(Sentence), so))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
									<MiningField name="float(tf(lowercase(Sentence), to))"/>
								</MiningSchema>
								<Node score="0.0046712332">
									<True/>
									<Node score="0.091185965">
										<SimplePredicate field="float(tf(lowercase(Sentence), happy))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="0.07794512">
										<SimplePredicate field="float(tf(lowercase(Sentence), excellent))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.06819341">
										<SimplePredicate field="float(tf(lowercase(Sentence), to))" operator="greaterOrEqual" value="1.5"/>
									</Node>
									<Node score="0.05531883">
										<SimplePredicate field="float(tf(lowercase(Sentence), so))" operator="greaterOrEqual" value="0.5"/>
										<Node score="0.16278188">
											<SimplePredicate field="float(tf(lowercase(Sentence), and))" operator="greaterOrEqual" value="0.5"/>
										</Node>
										<Node score="-0.11285847">
											<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.107480206">
										<SimplePredicate field="float(tf(lowercase(Sentence), not))" operator="greaterOrEqual" value="0.5"/>
										<Node score="2.635709E-4">
											<SimplePredicate field="float(tf(lowercase(Sentence), good))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="-0.11518771">
										<SimplePredicate field="float(tf(lowercase(Sentence), only))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="100">
							<True/>
							<TreeModel functionName="regression" noTrueChildStrategy="returnLastPrediction" x-mathContext="float">
								<MiningSchema>
									<MiningField name="float(tf(lowercase(Sentence), design))"/>
									<MiningField name="float(tf(lowercase(Sentence), great))"/>
									<MiningField name="float(tf(lowercase(Sentence), in))"/>
									<MiningField name="float(tf(lowercase(Sentence), money))"/>
									<MiningField name="float(tf(lowercase(Sentence), over))"/>
									<MiningField name="float(tf(lowercase(Sentence), piece))"/>
									<MiningField name="float(tf(lowercase(Sentence), the))"/>
								</MiningSchema>
								<Node score="0.008578723">
									<True/>
									<Node score="-0.08877546">
										<SimplePredicate field="float(tf(lowercase(Sentence), money))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08650629">
										<SimplePredicate field="float(tf(lowercase(Sentence), design))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08042689">
										<SimplePredicate field="float(tf(lowercase(Sentence), piece))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.09883251">
										<SimplePredicate field="float(tf(lowercase(Sentence), over))" operator="greaterOrEqual" value="0.5"/>
									</Node>
									<Node score="-0.08278857">
										<SimplePredicate field="float(tf(lowercase(Sentence), the))" operator="greaterOrEqual" value="1.5"/>
										<Node score="0.10540379">
											<SimplePredicate field="float(tf(lowercase(Sentence), in))" operator="greaterOrEqual" value="0.5"/>
										</Node>
									</Node>
									<Node score="0.13154602">
										<SimplePredicate field="float(tf(lowercase(Sentence), great))" operator="greaterOrEqual" value="0.5"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
					</Segmentation>
				</MiningModel>
			</Segment>
			<Segment id="2">
				<True/>
				<RegressionModel functionName="classification" normalizationMethod="logit" x-mathContext="float">
					<MiningSchema>
						<MiningField name="Score" usageType="target"/>
						<MiningField name="xgbValue"/>
					</MiningSchema>
					<Output>
						<OutputField name="probability(0)" optype="continuous" dataType="float" feature="probability" value="0"/>
						<OutputField name="probability(1)" optype="continuous" dataType="float" feature="probability" value="1"/>
					</Output>
					<RegressionTable intercept="0.0" targetCategory="1">
						<NumericPredictor name="xgbValue" coefficient="1.0"/>
					</RegressionTable>
					<RegressionTable intercept="0.0" targetCategory="0"/>
				</RegressionModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
