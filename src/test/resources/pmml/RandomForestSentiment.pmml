<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="JPMML-SkLearn" version="1.6.18"/>
		<Timestamp>2021-05-27T20:19:33Z</Timestamp>
	</Header>
	<DataDictionary>
		<DataField name="Score" optype="categorical" dataType="integer">
			<Value value="0"/>
			<Value value="1"/>
		</DataField>
		<DataField name="Sentence" optype="categorical" dataType="string"/>
	</DataDictionary>
	<TransformationDictionary>
		<DefineFunction name="tf(lowercase(Sentence))" optype="continuous" dataType="integer">
			<ParameterField name="document"/>
			<ParameterField name="term"/>
			<TextIndex textField="document" x-wordRE="(?u)\b\w\w+\b">
				<FieldRef field="term"/>
			</TextIndex>
		</DefineFunction>
	</TransformationDictionary>
	<MiningModel functionName="classification" algorithmName="sklearn.ensemble._forest.RandomForestClassifier">
		<MiningSchema>
			<MiningField name="Score" usageType="target"/>
			<MiningField name="Sentence"/>
		</MiningSchema>
		<Output>
			<OutputField name="probability(0)" optype="continuous" dataType="double" feature="probability" value="0"/>
			<OutputField name="probability(1)" optype="continuous" dataType="double" feature="probability" value="1"/>
		</Output>
		<LocalTransformations>
			<DerivedField name="lowercase(Sentence)" optype="categorical" dataType="string">
				<Apply function="lowercase">
					<FieldRef field="Sentence"/>
				</Apply>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), after)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">after</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), after))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), after)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), and)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">and</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), and))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), and)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), and the)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">and the</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), and the))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), and the)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), at)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">at</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), at))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), at)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), best)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">best</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), best))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), best)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), comfortable)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">comfortable</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), comfortable))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), comfortable)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), do)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">do</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), do))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), do)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), does not)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">does not</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), does not))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), does not)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), doesn)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">doesn</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), doesn))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), doesn)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), don)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">don</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), don))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), don)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), easy)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">easy</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), easy))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), easy)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), ever)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">ever</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), ever))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), ever)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), excellent)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">excellent</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), excellent))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), excellent)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), first)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">first</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), first))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), first)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), good)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">good</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), good))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), good)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), great)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), in)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">in</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), in))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), in)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), is)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">is</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), is))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), is)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), is great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">is great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), is great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), is great)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), love)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">love</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), love))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), love)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), me)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">me</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), me))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), me)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), money)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">money</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), money))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), money)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), nice)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">nice</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), nice))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), nice)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), not)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">not</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), not))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), not)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), out)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">out</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), out))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), out)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), price)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">price</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), price))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), price)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), quality)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">quality</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), quality))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), quality)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), recommend)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">recommend</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), recommend))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), recommend)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), so)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">so</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), so))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), so)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), sound)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">sound</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), sound))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), sound)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the best)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the best</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the best))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the best)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the phone)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the phone</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the phone))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the phone)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), to)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">to</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), to))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), to)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), very)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">very</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), very))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), very)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), was)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">was</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), was))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), was)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), waste)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">waste</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), waste))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), waste)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), well)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">well</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), well))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), well)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), work)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">work</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), work))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), work)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), works)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">works</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), works))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), works)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), works great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">works great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), works great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), works great)"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), works)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), works))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), doesn)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), doesn))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), don)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), don))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), very)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), very))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), excellent)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), excellent))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), sound)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), sound))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), not)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), not))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), best)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), best))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), so)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), so))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), and the)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), and the))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), ever)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), ever))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), in)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), in))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), work)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), work))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), money)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), money))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), good)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), good))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), love)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), love))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), well)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), well))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), does not)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), does not))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), price)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), price))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), nice)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), nice))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), waste)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), waste))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), after)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), after))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), first)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), first))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), works great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), works great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), and)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), and))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), do)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), do))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), is)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), is))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), was)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), was))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), to)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), to))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the phone)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the phone))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), is great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), is great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), out)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), out))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), me)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), me))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the best)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the best))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), recommend)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), recommend))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), quality)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), quality))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), at)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), at))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), easy)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), easy))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), comfortable)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), comfortable))"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="average">
			<Segment id="1">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), doesn)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), sound)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), doesn)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="603">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), sound)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="330"/>
														<ScoreDistribution value="1" recordCount="273"/>
													</Node>
													<Node score="1" recordCount="14">
														<True/>
														<ScoreDistribution value="0" recordCount="6"/>
														<ScoreDistribution value="1" recordCount="8"/>
													</Node>
												</Node>
												<Node score="1" recordCount="26">
													<True/>
													<ScoreDistribution value="0" recordCount="1"/>
													<ScoreDistribution value="1" recordCount="25"/>
												</Node>
											</Node>
											<Node score="0" recordCount="106">
												<True/>
												<ScoreDistribution value="0" recordCount="77"/>
												<ScoreDistribution value="1" recordCount="29"/>
											</Node>
										</Node>
										<Node score="1" recordCount="79">
											<True/>
											<ScoreDistribution value="0" recordCount="2"/>
											<ScoreDistribution value="1" recordCount="77"/>
										</Node>
									</Node>
									<Node score="1" recordCount="88">
										<True/>
										<ScoreDistribution value="0" recordCount="24"/>
										<ScoreDistribution value="1" recordCount="64"/>
									</Node>
								</Node>
								<Node score="0" recordCount="26">
									<True/>
									<ScoreDistribution value="0" recordCount="20"/>
									<ScoreDistribution value="1" recordCount="6"/>
								</Node>
							</Node>
							<Node score="0" recordCount="22">
								<True/>
								<ScoreDistribution value="0" recordCount="18"/>
								<ScoreDistribution value="1" recordCount="4"/>
							</Node>
						</Node>
						<Node score="1" recordCount="36">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="36"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), headset)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">headset</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), headset))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), headset)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), headset)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), headset))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), headset)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="681">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="309"/>
														<ScoreDistribution value="1" recordCount="372"/>
													</Node>
													<Node score="0" recordCount="68">
														<True/>
														<ScoreDistribution value="0" recordCount="41"/>
														<ScoreDistribution value="1" recordCount="27"/>
													</Node>
												</Node>
												<Node score="0" recordCount="18">
													<True/>
													<ScoreDistribution value="0" recordCount="16"/>
													<ScoreDistribution value="1" recordCount="2"/>
												</Node>
											</Node>
											<Node score="0" recordCount="27">
												<True/>
												<ScoreDistribution value="0" recordCount="24"/>
												<ScoreDistribution value="1" recordCount="3"/>
											</Node>
										</Node>
										<Node score="1" recordCount="29">
											<True/>
											<ScoreDistribution value="0" recordCount="10"/>
											<ScoreDistribution value="1" recordCount="19"/>
										</Node>
									</Node>
									<Node score="1" recordCount="36">
										<True/>
										<ScoreDistribution value="0" recordCount="15"/>
										<ScoreDistribution value="1" recordCount="21"/>
									</Node>
								</Node>
								<Node score="0" recordCount="30">
									<True/>
									<ScoreDistribution value="0" recordCount="17"/>
									<ScoreDistribution value="1" recordCount="13"/>
								</Node>
							</Node>
							<Node score="1" recordCount="23">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="23"/>
							</Node>
						</Node>
						<Node score="0" recordCount="76">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="65"/>
							<ScoreDistribution value="1" recordCount="11"/>
						</Node>
						<Node score="0" recordCount="12">
							<True/>
							<ScoreDistribution value="0" recordCount="12"/>
							<ScoreDistribution value="1" recordCount="0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), if)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">if</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), if))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), if)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), if)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), if))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), if)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="699">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="348"/>
														<ScoreDistribution value="1" recordCount="351"/>
													</Node>
													<Node score="1" recordCount="19">
														<True/>
														<ScoreDistribution value="0" recordCount="3"/>
														<ScoreDistribution value="1" recordCount="16"/>
													</Node>
												</Node>
												<Node score="1" recordCount="21">
													<True/>
													<ScoreDistribution value="0" recordCount="0"/>
													<ScoreDistribution value="1" recordCount="21"/>
												</Node>
											</Node>
											<Node score="0" recordCount="24">
												<True/>
												<ScoreDistribution value="0" recordCount="20"/>
												<ScoreDistribution value="1" recordCount="4"/>
											</Node>
										</Node>
										<Node score="1" recordCount="39">
											<True/>
											<ScoreDistribution value="0" recordCount="2"/>
											<ScoreDistribution value="1" recordCount="37"/>
										</Node>
									</Node>
									<Node score="1" recordCount="47">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="46"/>
									</Node>
								</Node>
								<Node score="0" recordCount="13">
									<True/>
									<ScoreDistribution value="0" recordCount="12"/>
									<ScoreDistribution value="1" recordCount="1"/>
								</Node>
							</Node>
							<Node score="0" recordCount="105">
								<True/>
								<ScoreDistribution value="0" recordCount="84"/>
								<ScoreDistribution value="1" recordCount="21"/>
							</Node>
						</Node>
						<Node score="1" recordCount="33">
							<True/>
							<ScoreDistribution value="0" recordCount="10"/>
							<ScoreDistribution value="1" recordCount="23"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), does not)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), be)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">be</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), be))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), be)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), bluetooth)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">bluetooth</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), bluetooth))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), bluetooth)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), ve)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">ve</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), ve))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), ve)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), be)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), be))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), bluetooth)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), bluetooth))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), ve)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), ve))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), be)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), bluetooth)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), ve)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="654">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="359"/>
														<ScoreDistribution value="1" recordCount="295"/>
													</Node>
													<Node score="1" recordCount="33">
														<True/>
														<ScoreDistribution value="0" recordCount="4"/>
														<ScoreDistribution value="1" recordCount="29"/>
													</Node>
												</Node>
												<Node score="1" recordCount="81">
													<True/>
													<ScoreDistribution value="0" recordCount="3"/>
													<ScoreDistribution value="1" recordCount="78"/>
												</Node>
											</Node>
											<Node score="1" recordCount="22">
												<True/>
												<ScoreDistribution value="0" recordCount="3"/>
												<ScoreDistribution value="1" recordCount="19"/>
											</Node>
										</Node>
										<Node score="0" recordCount="27">
											<True/>
											<ScoreDistribution value="0" recordCount="17"/>
											<ScoreDistribution value="1" recordCount="10"/>
										</Node>
									</Node>
									<Node score="1" recordCount="18">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="17"/>
									</Node>
								</Node>
								<Node score="0" recordCount="99">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), does not)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="90"/>
									<ScoreDistribution value="1" recordCount="9"/>
								</Node>
								<Node score="0" recordCount="16">
									<True/>
									<ScoreDistribution value="0" recordCount="14"/>
									<ScoreDistribution value="1" recordCount="2"/>
								</Node>
							</Node>
							<Node score="1" recordCount="20">
								<True/>
								<ScoreDistribution value="0" recordCount="4"/>
								<ScoreDistribution value="1" recordCount="16"/>
							</Node>
						</Node>
						<Node score="0" recordCount="30">
							<True/>
							<ScoreDistribution value="0" recordCount="23"/>
							<ScoreDistribution value="1" recordCount="7"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), has)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">has</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), has))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), has)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), has)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), has))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), has)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
										<Node score="0" recordCount="842">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="459"/>
											<ScoreDistribution value="1" recordCount="383"/>
										</Node>
										<Node score="1" recordCount="38">
											<True/>
											<ScoreDistribution value="0" recordCount="1"/>
											<ScoreDistribution value="1" recordCount="37"/>
										</Node>
									</Node>
									<Node score="0" recordCount="21">
										<True/>
										<ScoreDistribution value="0" recordCount="21"/>
										<ScoreDistribution value="1" recordCount="0"/>
									</Node>
								</Node>
								<Node score="1" recordCount="29">
									<True/>
									<ScoreDistribution value="0" recordCount="2"/>
									<ScoreDistribution value="1" recordCount="27"/>
								</Node>
							</Node>
							<Node score="1" recordCount="41">
								<True/>
								<ScoreDistribution value="0" recordCount="10"/>
								<ScoreDistribution value="1" recordCount="31"/>
							</Node>
						</Node>
						<Node score="1" recordCount="29">
							<True/>
							<ScoreDistribution value="0" recordCount="5"/>
							<ScoreDistribution value="1" recordCount="24"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), any)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">any</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), any))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), any)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), any)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), any))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), any)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
												<Node score="0" recordCount="838">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="450"/>
													<ScoreDistribution value="1" recordCount="388"/>
												</Node>
												<Node score="0" recordCount="13">
													<True/>
													<ScoreDistribution value="0" recordCount="11"/>
													<ScoreDistribution value="1" recordCount="2"/>
												</Node>
											</Node>
											<Node score="0" recordCount="21">
												<True/>
												<ScoreDistribution value="0" recordCount="19"/>
												<ScoreDistribution value="1" recordCount="2"/>
											</Node>
										</Node>
										<Node score="1" recordCount="47">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="47"/>
										</Node>
									</Node>
									<Node score="1" recordCount="17">
										<True/>
										<ScoreDistribution value="0" recordCount="5"/>
										<ScoreDistribution value="1" recordCount="12"/>
									</Node>
								</Node>
								<Node score="0" recordCount="17">
									<True/>
									<ScoreDistribution value="0" recordCount="17"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="15">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="15"/>
							</Node>
						</Node>
						<Node score="1" recordCount="32">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="32"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="905">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="504"/>
							<ScoreDistribution value="1" recordCount="401"/>
						</Node>
						<Node score="1" recordCount="95">
							<True/>
							<ScoreDistribution value="0" recordCount="2"/>
							<ScoreDistribution value="1" recordCount="93"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), do)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), only)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">only</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), only))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), only)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), only)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), only))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), only)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), do)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="656">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="381"/>
												<ScoreDistribution value="1" recordCount="275"/>
											</Node>
											<Node score="1" recordCount="23">
												<True/>
												<ScoreDistribution value="0" recordCount="10"/>
												<ScoreDistribution value="1" recordCount="13"/>
											</Node>
										</Node>
										<Node score="0" recordCount="16">
											<True/>
											<ScoreDistribution value="0" recordCount="14"/>
											<ScoreDistribution value="1" recordCount="2"/>
										</Node>
									</Node>
									<Node score="0" recordCount="20">
										<True/>
										<ScoreDistribution value="0" recordCount="13"/>
										<ScoreDistribution value="1" recordCount="7"/>
									</Node>
								</Node>
								<Node score="1" recordCount="242">
									<True/>
									<ScoreDistribution value="0" recordCount="117"/>
									<ScoreDistribution value="1" recordCount="125"/>
								</Node>
							</Node>
							<Node score="1" recordCount="21">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="21"/>
							</Node>
						</Node>
						<Node score="1" recordCount="22">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="22"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), service)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">service</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), service))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), service)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), still)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">still</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), still))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), still)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), still)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), still))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), service)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), service))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), still)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="570">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), service)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="256"/>
														<ScoreDistribution value="1" recordCount="314"/>
													</Node>
													<Node score="0" recordCount="18">
														<True/>
														<ScoreDistribution value="0" recordCount="10"/>
														<ScoreDistribution value="1" recordCount="8"/>
													</Node>
												</Node>
												<Node score="0" recordCount="87">
													<True/>
													<ScoreDistribution value="0" recordCount="78"/>
													<ScoreDistribution value="1" recordCount="9"/>
												</Node>
											</Node>
											<Node score="1" recordCount="23">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="23"/>
											</Node>
										</Node>
										<Node score="1" recordCount="202">
											<True/>
											<ScoreDistribution value="0" recordCount="75"/>
											<ScoreDistribution value="1" recordCount="127"/>
										</Node>
									</Node>
									<Node score="1" recordCount="35">
										<True/>
										<ScoreDistribution value="0" recordCount="0"/>
										<ScoreDistribution value="1" recordCount="35"/>
									</Node>
								</Node>
								<Node score="0" recordCount="24">
									<True/>
									<ScoreDistribution value="0" recordCount="23"/>
									<ScoreDistribution value="1" recordCount="1"/>
								</Node>
							</Node>
							<Node score="0" recordCount="16">
								<True/>
								<ScoreDistribution value="0" recordCount="13"/>
								<ScoreDistribution value="1" recordCount="3"/>
							</Node>
						</Node>
						<Node score="0" recordCount="25">
							<True/>
							<ScoreDistribution value="0" recordCount="24"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), if you)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">if you</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), if you))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), if you)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), if you)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), if you))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), if you)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="598">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="317"/>
												<ScoreDistribution value="1" recordCount="281"/>
											</Node>
											<Node score="0" recordCount="41">
												<True/>
												<ScoreDistribution value="0" recordCount="30"/>
												<ScoreDistribution value="1" recordCount="11"/>
											</Node>
										</Node>
										<Node score="1" recordCount="228">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="87"/>
											<ScoreDistribution value="1" recordCount="141"/>
										</Node>
										<Node score="0" recordCount="22">
											<True/>
											<ScoreDistribution value="0" recordCount="12"/>
											<ScoreDistribution value="1" recordCount="10"/>
										</Node>
									</Node>
									<Node score="0" recordCount="27">
										<True/>
										<ScoreDistribution value="0" recordCount="23"/>
										<ScoreDistribution value="1" recordCount="4"/>
									</Node>
								</Node>
								<Node score="1" recordCount="44">
									<True/>
									<ScoreDistribution value="0" recordCount="11"/>
									<ScoreDistribution value="1" recordCount="33"/>
								</Node>
							</Node>
							<Node score="0" recordCount="17">
								<True/>
								<ScoreDistribution value="0" recordCount="16"/>
								<ScoreDistribution value="1" recordCount="1"/>
							</Node>
						</Node>
						<Node score="1" recordCount="23">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="23"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="523">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="266"/>
														<ScoreDistribution value="1" recordCount="257"/>
													</Node>
													<Node score="0" recordCount="56">
														<True/>
														<ScoreDistribution value="0" recordCount="38"/>
														<ScoreDistribution value="1" recordCount="18"/>
													</Node>
												</Node>
												<Node score="0" recordCount="17">
													<True/>
													<ScoreDistribution value="0" recordCount="13"/>
													<ScoreDistribution value="1" recordCount="4"/>
												</Node>
											</Node>
											<Node score="1" recordCount="131">
												<True/>
												<ScoreDistribution value="0" recordCount="59"/>
												<ScoreDistribution value="1" recordCount="72"/>
											</Node>
										</Node>
										<Node score="1" recordCount="16">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="16"/>
										</Node>
									</Node>
									<Node score="0" recordCount="106">
										<True/>
										<ScoreDistribution value="0" recordCount="94"/>
										<ScoreDistribution value="1" recordCount="12"/>
									</Node>
								</Node>
								<Node score="0" recordCount="28">
									<True/>
									<ScoreDistribution value="0" recordCount="26"/>
									<ScoreDistribution value="1" recordCount="2"/>
								</Node>
							</Node>
							<Node score="1" recordCount="83">
								<True/>
								<ScoreDistribution value="0" recordCount="9"/>
								<ScoreDistribution value="1" recordCount="74"/>
							</Node>
						</Node>
						<Node score="1" recordCount="40">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="40"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the phone)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), the phone)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
												<Node score="1" recordCount="640">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="294"/>
													<ScoreDistribution value="1" recordCount="346"/>
												</Node>
												<Node score="0" recordCount="24">
													<True/>
													<ScoreDistribution value="0" recordCount="18"/>
													<ScoreDistribution value="1" recordCount="6"/>
												</Node>
											</Node>
											<Node score="0" recordCount="107">
												<True/>
												<ScoreDistribution value="0" recordCount="95"/>
												<ScoreDistribution value="1" recordCount="12"/>
											</Node>
										</Node>
										<Node score="1" recordCount="18">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="18"/>
										</Node>
									</Node>
									<Node score="1" recordCount="82">
										<True/>
										<ScoreDistribution value="0" recordCount="7"/>
										<ScoreDistribution value="1" recordCount="75"/>
									</Node>
								</Node>
								<Node score="0" recordCount="26">
									<True/>
									<ScoreDistribution value="0" recordCount="15"/>
									<ScoreDistribution value="1" recordCount="11"/>
								</Node>
							</Node>
							<Node score="0" recordCount="83">
								<True/>
								<ScoreDistribution value="0" recordCount="52"/>
								<ScoreDistribution value="1" recordCount="31"/>
							</Node>
						</Node>
						<Node score="0" recordCount="20">
							<True/>
							<ScoreDistribution value="0" recordCount="20"/>
							<ScoreDistribution value="1" recordCount="0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), is great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="686">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="315"/>
														<ScoreDistribution value="1" recordCount="371"/>
													</Node>
													<Node score="0" recordCount="15">
														<True/>
														<ScoreDistribution value="0" recordCount="13"/>
														<ScoreDistribution value="1" recordCount="2"/>
													</Node>
												</Node>
												<Node score="0" recordCount="44">
													<True/>
													<ScoreDistribution value="0" recordCount="29"/>
													<ScoreDistribution value="1" recordCount="15"/>
												</Node>
											</Node>
											<Node score="0" recordCount="70">
												<True/>
												<ScoreDistribution value="0" recordCount="43"/>
												<ScoreDistribution value="1" recordCount="27"/>
											</Node>
										</Node>
										<Node score="0" recordCount="17">
											<True/>
											<ScoreDistribution value="0" recordCount="14"/>
											<ScoreDistribution value="1" recordCount="3"/>
										</Node>
									</Node>
									<Node score="0" recordCount="25">
										<True/>
										<ScoreDistribution value="0" recordCount="25"/>
										<ScoreDistribution value="1" recordCount="0"/>
									</Node>
								</Node>
								<Node score="1" recordCount="19">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="7"/>
									<ScoreDistribution value="1" recordCount="12"/>
								</Node>
								<Node score="0" recordCount="20">
									<True/>
									<ScoreDistribution value="0" recordCount="20"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="15">
								<True/>
								<ScoreDistribution value="0" recordCount="1"/>
								<ScoreDistribution value="1" recordCount="14"/>
							</Node>
						</Node>
						<Node score="1" recordCount="89">
							<True/>
							<ScoreDistribution value="0" recordCount="17"/>
							<ScoreDistribution value="1" recordCount="72"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), do)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), with)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">with</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), with))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), with)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), with)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), with))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), do)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="592">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="327"/>
												<ScoreDistribution value="1" recordCount="265"/>
											</Node>
											<Node score="0" recordCount="21">
												<True/>
												<ScoreDistribution value="0" recordCount="18"/>
												<ScoreDistribution value="1" recordCount="3"/>
											</Node>
										</Node>
										<Node score="1" recordCount="19">
											<True/>
											<ScoreDistribution value="0" recordCount="2"/>
											<ScoreDistribution value="1" recordCount="17"/>
										</Node>
									</Node>
									<Node score="0" recordCount="21">
										<True/>
										<ScoreDistribution value="0" recordCount="20"/>
										<ScoreDistribution value="1" recordCount="1"/>
									</Node>
								</Node>
								<Node score="0" recordCount="48">
									<True/>
									<ScoreDistribution value="0" recordCount="34"/>
									<ScoreDistribution value="1" recordCount="14"/>
								</Node>
							</Node>
							<Node score="1" recordCount="30">
								<True/>
								<ScoreDistribution value="0" recordCount="1"/>
								<ScoreDistribution value="1" recordCount="29"/>
							</Node>
						</Node>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
								<Node score="1" recordCount="87">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), with)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="43"/>
									<ScoreDistribution value="1" recordCount="44"/>
								</Node>
								<Node score="1" recordCount="25">
									<True/>
									<ScoreDistribution value="0" recordCount="8"/>
									<ScoreDistribution value="1" recordCount="17"/>
								</Node>
							</Node>
							<Node score="1" recordCount="61">
								<True/>
								<ScoreDistribution value="0" recordCount="27"/>
								<ScoreDistribution value="1" recordCount="34"/>
							</Node>
						</Node>
						<Node score="1" recordCount="96">
							<True/>
							<ScoreDistribution value="0" recordCount="30"/>
							<ScoreDistribution value="1" recordCount="66"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="1" recordCount="908">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
							<ScoreDistribution value="0" recordCount="409"/>
							<ScoreDistribution value="1" recordCount="499"/>
						</Node>
						<Node score="0" recordCount="92">
							<True/>
							<ScoreDistribution value="0" recordCount="58"/>
							<ScoreDistribution value="1" recordCount="34"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), quality)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), of)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">of</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), of))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), of)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), of)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), of))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), the best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), quality)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), of)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="652">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="312"/>
														<ScoreDistribution value="1" recordCount="340"/>
													</Node>
													<Node score="0" recordCount="83">
														<True/>
														<ScoreDistribution value="0" recordCount="77"/>
														<ScoreDistribution value="1" recordCount="6"/>
													</Node>
												</Node>
												<Node score="0" recordCount="80">
													<True/>
													<ScoreDistribution value="0" recordCount="52"/>
													<ScoreDistribution value="1" recordCount="28"/>
												</Node>
											</Node>
											<Node score="0" recordCount="18">
												<True/>
												<ScoreDistribution value="0" recordCount="17"/>
												<ScoreDistribution value="1" recordCount="1"/>
											</Node>
										</Node>
										<Node score="1" recordCount="50">
											<True/>
											<ScoreDistribution value="0" recordCount="18"/>
											<ScoreDistribution value="1" recordCount="32"/>
										</Node>
									</Node>
									<Node score="1" recordCount="46">
										<True/>
										<ScoreDistribution value="0" recordCount="0"/>
										<ScoreDistribution value="1" recordCount="46"/>
									</Node>
								</Node>
								<Node score="1" recordCount="28">
									<True/>
									<ScoreDistribution value="0" recordCount="4"/>
									<ScoreDistribution value="1" recordCount="24"/>
								</Node>
							</Node>
							<Node score="1" recordCount="18">
								<True/>
								<ScoreDistribution value="0" recordCount="1"/>
								<ScoreDistribution value="1" recordCount="17"/>
							</Node>
						</Node>
						<Node score="0" recordCount="25">
							<True/>
							<ScoreDistribution value="0" recordCount="23"/>
							<ScoreDistribution value="1" recordCount="2"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), is great)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="976">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), is great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="520"/>
							<ScoreDistribution value="1" recordCount="456"/>
						</Node>
						<Node score="1" recordCount="24">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="24"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="967">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="493"/>
							<ScoreDistribution value="1" recordCount="474"/>
						</Node>
						<Node score="1" recordCount="33">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="33"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), easy to)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">easy to</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), easy to))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), easy to)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), happy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">happy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), happy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), happy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), in my)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">in my</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), in my))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), in my)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), the price)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">the price</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), the price))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), the price)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), happy)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), happy))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), the price)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), the price))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), easy to)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), easy to))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), in my)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), in my))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), happy)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), the price)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), the best)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), easy to)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), in my)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="832">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="451"/>
														<ScoreDistribution value="1" recordCount="381"/>
													</Node>
													<Node score="0" recordCount="19">
														<True/>
														<ScoreDistribution value="0" recordCount="16"/>
														<ScoreDistribution value="1" recordCount="3"/>
													</Node>
												</Node>
												<Node score="0" recordCount="16">
													<True/>
													<ScoreDistribution value="0" recordCount="15"/>
													<ScoreDistribution value="1" recordCount="1"/>
												</Node>
											</Node>
											<Node score="1" recordCount="19">
												<True/>
												<ScoreDistribution value="0" recordCount="2"/>
												<ScoreDistribution value="1" recordCount="17"/>
											</Node>
										</Node>
										<Node score="1" recordCount="37">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="37"/>
										</Node>
									</Node>
									<Node score="1" recordCount="18">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="17"/>
									</Node>
								</Node>
								<Node score="1" recordCount="16">
									<True/>
									<ScoreDistribution value="0" recordCount="1"/>
									<ScoreDistribution value="1" recordCount="15"/>
								</Node>
							</Node>
							<Node score="1" recordCount="21">
								<True/>
								<ScoreDistribution value="0" recordCount="5"/>
								<ScoreDistribution value="1" recordCount="16"/>
							</Node>
						</Node>
						<Node score="1" recordCount="22">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="22"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="712">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="392"/>
														<ScoreDistribution value="1" recordCount="320"/>
													</Node>
													<Node score="1" recordCount="27">
														<True/>
														<ScoreDistribution value="0" recordCount="1"/>
														<ScoreDistribution value="1" recordCount="26"/>
													</Node>
												</Node>
												<Node score="0" recordCount="51">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="37"/>
													<ScoreDistribution value="1" recordCount="14"/>
												</Node>
												<Node score="0" recordCount="14">
													<True/>
													<ScoreDistribution value="0" recordCount="7"/>
													<ScoreDistribution value="1" recordCount="7"/>
												</Node>
											</Node>
											<Node score="1" recordCount="25">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="25"/>
											</Node>
										</Node>
										<Node score="1" recordCount="33">
											<True/>
											<ScoreDistribution value="0" recordCount="6"/>
											<ScoreDistribution value="1" recordCount="27"/>
										</Node>
									</Node>
									<Node score="1" recordCount="16">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="15"/>
									</Node>
								</Node>
								<Node score="0" recordCount="15">
									<True/>
									<ScoreDistribution value="0" recordCount="15"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="23">
								<True/>
								<ScoreDistribution value="0" recordCount="5"/>
								<ScoreDistribution value="1" recordCount="18"/>
							</Node>
						</Node>
						<Node score="1" recordCount="84">
							<True/>
							<ScoreDistribution value="0" recordCount="13"/>
							<ScoreDistribution value="1" recordCount="71"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), sound)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
							<Node score="0" recordCount="884">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), sound)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="477"/>
								<ScoreDistribution value="1" recordCount="407"/>
							</Node>
							<Node score="1" recordCount="23">
								<True/>
								<ScoreDistribution value="0" recordCount="9"/>
								<ScoreDistribution value="1" recordCount="14"/>
							</Node>
						</Node>
						<Node score="1" recordCount="93">
							<True/>
							<ScoreDistribution value="0" recordCount="26"/>
							<ScoreDistribution value="1" recordCount="67"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), does not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the phone)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), the phone)))" operator="lessOrEqual" value="0.5"/>
										<Node score="0" recordCount="806">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), does not)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="412"/>
											<ScoreDistribution value="1" recordCount="394"/>
										</Node>
										<Node score="0" recordCount="19">
											<True/>
											<ScoreDistribution value="0" recordCount="18"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="0" recordCount="30">
										<True/>
										<ScoreDistribution value="0" recordCount="21"/>
										<ScoreDistribution value="1" recordCount="9"/>
									</Node>
								</Node>
								<Node score="1" recordCount="90">
									<True/>
									<ScoreDistribution value="0" recordCount="9"/>
									<ScoreDistribution value="1" recordCount="81"/>
								</Node>
							</Node>
							<Node score="0" recordCount="28">
								<True/>
								<ScoreDistribution value="0" recordCount="22"/>
								<ScoreDistribution value="1" recordCount="6"/>
							</Node>
						</Node>
						<Node score="1" recordCount="27">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="27"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), comfortable)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), could)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">could</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), could))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), could)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), could)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), could))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), comfortable)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), could)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
												<Node score="1" recordCount="827">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="412"/>
													<ScoreDistribution value="1" recordCount="415"/>
												</Node>
												<Node score="1" recordCount="24">
													<True/>
													<ScoreDistribution value="0" recordCount="5"/>
													<ScoreDistribution value="1" recordCount="19"/>
												</Node>
											</Node>
											<Node score="0" recordCount="35">
												<True/>
												<ScoreDistribution value="0" recordCount="29"/>
												<ScoreDistribution value="1" recordCount="6"/>
											</Node>
										</Node>
										<Node score="1" recordCount="15">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="15"/>
										</Node>
									</Node>
									<Node score="0" recordCount="25">
										<True/>
										<ScoreDistribution value="0" recordCount="17"/>
										<ScoreDistribution value="1" recordCount="8"/>
									</Node>
								</Node>
								<Node score="1" recordCount="33">
									<True/>
									<ScoreDistribution value="0" recordCount="2"/>
									<ScoreDistribution value="1" recordCount="31"/>
								</Node>
							</Node>
							<Node score="0" recordCount="22">
								<True/>
								<ScoreDistribution value="0" recordCount="17"/>
								<ScoreDistribution value="1" recordCount="5"/>
							</Node>
						</Node>
						<Node score="1" recordCount="19">
							<True/>
							<ScoreDistribution value="0" recordCount="1"/>
							<ScoreDistribution value="1" recordCount="18"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), and it)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">and it</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), and it))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), and it)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), and it)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), and it))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
									<Node score="0" recordCount="849">
										<SimplePredicate field="double(float(tf(lowercase(Sentence), and it)))" operator="lessOrEqual" value="0.5"/>
										<ScoreDistribution value="0" recordCount="517"/>
										<ScoreDistribution value="1" recordCount="332"/>
									</Node>
									<Node score="1" recordCount="19">
										<True/>
										<ScoreDistribution value="0" recordCount="9"/>
										<ScoreDistribution value="1" recordCount="10"/>
									</Node>
								</Node>
								<Node score="1" recordCount="21">
									<True/>
									<ScoreDistribution value="0" recordCount="0"/>
									<ScoreDistribution value="1" recordCount="21"/>
								</Node>
							</Node>
							<Node score="1" recordCount="92">
								<True/>
								<ScoreDistribution value="0" recordCount="2"/>
								<ScoreDistribution value="1" recordCount="90"/>
							</Node>
						</Node>
						<Node score="1" recordCount="19">
							<True/>
							<ScoreDistribution value="0" recordCount="4"/>
							<ScoreDistribution value="1" recordCount="15"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), doesn)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), quality)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), fine)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">fine</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), fine))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), fine)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), fine)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), fine))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), fine)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), quality)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="658">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), doesn)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="323"/>
														<ScoreDistribution value="1" recordCount="335"/>
													</Node>
													<Node score="0" recordCount="14">
														<True/>
														<ScoreDistribution value="0" recordCount="14"/>
														<ScoreDistribution value="1" recordCount="0"/>
													</Node>
												</Node>
												<Node score="1" recordCount="74">
													<True/>
													<ScoreDistribution value="0" recordCount="18"/>
													<ScoreDistribution value="1" recordCount="56"/>
												</Node>
											</Node>
											<Node score="0" recordCount="16">
												<True/>
												<ScoreDistribution value="0" recordCount="11"/>
												<ScoreDistribution value="1" recordCount="5"/>
											</Node>
										</Node>
										<Node score="1" recordCount="20">
											<True/>
											<ScoreDistribution value="0" recordCount="1"/>
											<ScoreDistribution value="1" recordCount="19"/>
										</Node>
									</Node>
									<Node score="0" recordCount="117">
										<True/>
										<ScoreDistribution value="0" recordCount="108"/>
										<ScoreDistribution value="1" recordCount="9"/>
									</Node>
								</Node>
								<Node score="1" recordCount="59">
									<True/>
									<ScoreDistribution value="0" recordCount="16"/>
									<ScoreDistribution value="1" recordCount="43"/>
								</Node>
							</Node>
							<Node score="1" recordCount="26">
								<True/>
								<ScoreDistribution value="0" recordCount="3"/>
								<ScoreDistribution value="1" recordCount="23"/>
							</Node>
						</Node>
						<Node score="1" recordCount="16">
							<True/>
							<ScoreDistribution value="0" recordCount="1"/>
							<ScoreDistribution value="1" recordCount="15"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), comfortable)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), than)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">than</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), than))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), than)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), than)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), than))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), than)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), comfortable)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="738">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="361"/>
														<ScoreDistribution value="1" recordCount="377"/>
													</Node>
													<Node score="1" recordCount="50">
														<True/>
														<ScoreDistribution value="0" recordCount="1"/>
														<ScoreDistribution value="1" recordCount="49"/>
													</Node>
												</Node>
												<Node score="0" recordCount="14">
													<True/>
													<ScoreDistribution value="0" recordCount="12"/>
													<ScoreDistribution value="1" recordCount="2"/>
												</Node>
											</Node>
											<Node score="1" recordCount="15">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="15"/>
											</Node>
										</Node>
										<Node score="0" recordCount="99">
											<True/>
											<ScoreDistribution value="0" recordCount="86"/>
											<ScoreDistribution value="1" recordCount="13"/>
										</Node>
									</Node>
									<Node score="0" recordCount="23">
										<True/>
										<ScoreDistribution value="0" recordCount="17"/>
										<ScoreDistribution value="1" recordCount="6"/>
									</Node>
								</Node>
								<Node score="1" recordCount="24">
									<True/>
									<ScoreDistribution value="0" recordCount="6"/>
									<ScoreDistribution value="1" recordCount="18"/>
								</Node>
							</Node>
							<Node score="1" recordCount="13">
								<True/>
								<ScoreDistribution value="0" recordCount="3"/>
								<ScoreDistribution value="1" recordCount="10"/>
							</Node>
						</Node>
						<Node score="1" recordCount="24">
							<True/>
							<ScoreDistribution value="0" recordCount="2"/>
							<ScoreDistribution value="1" recordCount="22"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), sound quality)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">sound quality</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), sound quality))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), sound quality)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), will)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">will</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), will))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), will)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), sound quality)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), sound quality))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), will)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), will))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), sound quality)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="739">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), will)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="410"/>
														<ScoreDistribution value="1" recordCount="329"/>
													</Node>
													<Node score="0" recordCount="14">
														<True/>
														<ScoreDistribution value="0" recordCount="12"/>
														<ScoreDistribution value="1" recordCount="2"/>
													</Node>
												</Node>
												<Node score="0" recordCount="14">
													<True/>
													<ScoreDistribution value="0" recordCount="14"/>
													<ScoreDistribution value="1" recordCount="0"/>
												</Node>
											</Node>
											<Node score="1" recordCount="45">
												<True/>
												<ScoreDistribution value="0" recordCount="18"/>
												<ScoreDistribution value="1" recordCount="27"/>
											</Node>
										</Node>
										<Node score="1" recordCount="26">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="26"/>
										</Node>
									</Node>
									<Node score="1" recordCount="96">
										<True/>
										<ScoreDistribution value="0" recordCount="36"/>
										<ScoreDistribution value="1" recordCount="60"/>
									</Node>
								</Node>
								<Node score="1" recordCount="16">
									<True/>
									<ScoreDistribution value="0" recordCount="2"/>
									<ScoreDistribution value="1" recordCount="14"/>
								</Node>
							</Node>
							<Node score="1" recordCount="30">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="30"/>
							</Node>
						</Node>
						<Node score="1" recordCount="20">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="20"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), that)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">that</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), that))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), that)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), that)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), that))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
								<Node score="0" recordCount="730">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="397"/>
									<ScoreDistribution value="1" recordCount="333"/>
								</Node>
								<Node score="0" recordCount="15">
									<True/>
									<ScoreDistribution value="0" recordCount="12"/>
									<ScoreDistribution value="1" recordCount="3"/>
								</Node>
							</Node>
							<Node score="1" recordCount="167">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), that)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="59"/>
								<ScoreDistribution value="1" recordCount="108"/>
							</Node>
							<Node score="0" recordCount="37">
								<True/>
								<ScoreDistribution value="0" recordCount="21"/>
								<ScoreDistribution value="1" recordCount="16"/>
							</Node>
						</Node>
						<Node score="1" recordCount="34">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="1"/>
							<ScoreDistribution value="1" recordCount="33"/>
						</Node>
						<Node score="1" recordCount="17">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="17"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
							<Node score="1" recordCount="864">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="429"/>
								<ScoreDistribution value="1" recordCount="435"/>
							</Node>
							<Node score="0" recordCount="23">
								<True/>
								<ScoreDistribution value="0" recordCount="17"/>
								<ScoreDistribution value="1" recordCount="6"/>
							</Node>
						</Node>
						<Node score="1" recordCount="113">
							<True/>
							<ScoreDistribution value="0" recordCount="32"/>
							<ScoreDistribution value="1" recordCount="81"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), then)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">then</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), then))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), then)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), this is)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">this is</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), this is))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), this is)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), this is)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), this is))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), then)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), then))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), this is)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), then)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="628">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
														<ScoreDistribution value="0" recordCount="320"/>
														<ScoreDistribution value="1" recordCount="308"/>
													</Node>
													<Node score="0" recordCount="53">
														<True/>
														<ScoreDistribution value="0" recordCount="36"/>
														<ScoreDistribution value="1" recordCount="17"/>
													</Node>
												</Node>
												<Node score="1" recordCount="13">
													<True/>
													<ScoreDistribution value="0" recordCount="3"/>
													<ScoreDistribution value="1" recordCount="10"/>
												</Node>
											</Node>
											<Node score="0" recordCount="25">
												<True/>
												<ScoreDistribution value="0" recordCount="21"/>
												<ScoreDistribution value="1" recordCount="4"/>
											</Node>
										</Node>
										<Node score="1" recordCount="28">
											<True/>
											<ScoreDistribution value="0" recordCount="2"/>
											<ScoreDistribution value="1" recordCount="26"/>
										</Node>
									</Node>
									<Node score="1" recordCount="176">
										<True/>
										<ScoreDistribution value="0" recordCount="85"/>
										<ScoreDistribution value="1" recordCount="91"/>
									</Node>
								</Node>
								<Node score="0" recordCount="22">
									<True/>
									<ScoreDistribution value="0" recordCount="15"/>
									<ScoreDistribution value="1" recordCount="7"/>
								</Node>
							</Node>
							<Node score="1" recordCount="25">
								<True/>
								<ScoreDistribution value="0" recordCount="2"/>
								<ScoreDistribution value="1" recordCount="23"/>
							</Node>
						</Node>
						<Node score="1" recordCount="30">
							<True/>
							<ScoreDistribution value="0" recordCount="10"/>
							<ScoreDistribution value="1" recordCount="20"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="972">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="519"/>
							<ScoreDistribution value="1" recordCount="453"/>
						</Node>
						<Node score="1" recordCount="28">
							<True/>
							<ScoreDistribution value="0" recordCount="9"/>
							<ScoreDistribution value="1" recordCount="19"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
