<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="SkLearn2PMML package" version="0.110.0"/>
		<Timestamp>2024-09-28T20:33:02Z</Timestamp>
	</Header>
	<DataDictionary>
		<DataField name="Species" optype="categorical" dataType="string">
			<Value value="setosa"/>
			<Value value="versicolor"/>
			<Value value="virginica"/>
		</DataField>
		<DataField name="Sepal.Length" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="4.3" rightMargin="7.9"/>
		</DataField>
		<DataField name="Sepal.Width" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="2.0" rightMargin="4.4"/>
		</DataField>
		<DataField name="Petal.Length" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="1.0" rightMargin="6.9"/>
		</DataField>
		<DataField name="Petal.Width" optype="continuous" dataType="double">
			<Interval closure="closedClosed" leftMargin="0.1" rightMargin="2.5"/>
		</DataField>
	</DataDictionary>
	<MiningModel functionName="classification" algorithmName="sklearn.ensemble._gb.GradientBoostingClassifier">
		<MiningSchema>
			<MiningField name="Species" usageType="target"/>
			<MiningField name="Petal.Width" missingValueTreatment="asIs"/>
			<MiningField name="Petal.Length" missingValueTreatment="asIs"/>
			<MiningField name="Sepal.Length" missingValueTreatment="asIs"/>
			<MiningField name="Sepal.Width" missingValueTreatment="asIs"/>
		</MiningSchema>
		<ModelStats>
			<UnivariateStats field="Petal.Width">
				<Counts totalFreq="150" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="0.1" maximum="2.5" mean="1.1993333333333336" standardDeviation="0.7596926279021594" median="1.3" interQuartileRange="1.5"/>
			</UnivariateStats>
			<UnivariateStats field="Petal.Length">
				<Counts totalFreq="150" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="1.0" maximum="6.9" mean="3.7580000000000005" standardDeviation="1.759404065775303" median="4.35" interQuartileRange="3.4999999999999996"/>
			</UnivariateStats>
			<UnivariateStats field="Sepal.Length">
				<Counts totalFreq="150" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="4.3" maximum="7.9" mean="5.843333333333334" standardDeviation="0.8253012917851409" median="5.8" interQuartileRange="1.3000000000000007"/>
			</UnivariateStats>
			<UnivariateStats field="Sepal.Width">
				<Counts totalFreq="150" missingFreq="0" invalidFreq="0"/>
				<NumericInfo minimum="2.0" maximum="4.4" mean="3.0573333333333337" standardDeviation="0.4344109677354946" median="3.0" interQuartileRange="0.5"/>
			</UnivariateStats>
		</ModelStats>
		<LocalTransformations>
			<DerivedField name="float(Sepal.Length)" optype="continuous" dataType="float">
				<FieldRef field="Sepal.Length"/>
			</DerivedField>
			<DerivedField name="float(Sepal.Width)" optype="continuous" dataType="float">
				<FieldRef field="Sepal.Width"/>
			</DerivedField>
			<DerivedField name="float(Petal.Length)" optype="continuous" dataType="float">
				<FieldRef field="Petal.Length"/>
			</DerivedField>
			<DerivedField name="float(Petal.Width)" optype="continuous" dataType="float">
				<FieldRef field="Petal.Width"/>
			</DerivedField>
			<DerivedField name="double(float(Petal.Width))" optype="continuous" dataType="double">
				<FieldRef field="float(Petal.Width)"/>
			</DerivedField>
			<DerivedField name="double(float(Petal.Length))" optype="continuous" dataType="double">
				<FieldRef field="float(Petal.Length)"/>
			</DerivedField>
			<DerivedField name="double(float(Sepal.Length))" optype="continuous" dataType="double">
				<FieldRef field="float(Sepal.Length)"/>
			</DerivedField>
			<DerivedField name="double(float(Sepal.Width))" optype="continuous" dataType="double">
				<FieldRef field="float(Sepal.Width)"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="modelChain" missingPredictionTreatment="returnMissing">
			<Segment id="1">
				<True/>
				<MiningModel functionName="regression">
					<MiningSchema>
						<MiningField name="double(float(Petal.Width))"/>
						<MiningField name="double(float(Petal.Length))"/>
						<MiningField name="double(float(Sepal.Length))"/>
						<MiningField name="double(float(Sepal.Width))"/>
					</MiningSchema>
					<Output>
						<OutputField name="decisionFunction(setosa)" optype="continuous" dataType="double" isFinalResult="false"/>
					</Output>
					<Targets>
						<Target rescaleFactor="0.1"/>
					</Targets>
					<Segmentation multipleModelMethod="sum" missingPredictionTreatment="returnMissing">
						<Segment id="1">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
								</MiningSchema>
								<Node score="-1.0000000000000002">
									<True/>
									<Node score="2.0000000000000004">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="2">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.9518605817710228">
									<True/>
									<Node score="1.6544242942422909">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.9143777566951282">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.9513907025680941">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.450000047683716"/>
										</Node>
									</Node>
									<Node score="-0.9502831742004956">
										<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.850000023841858"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="3">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.9120076993614799">
									<True/>
									<Node score="1.4278947666851596">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.8570932442572089">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.9106465690541399">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="3.899999976158142"/>
										</Node>
									</Node>
									<Node score="-0.9093061173903126">
										<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.950000047683716"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="4">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.8784869277483347">
									<True/>
									<Node score="1.2692383115262686">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.8164783361414721">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.876315743223271">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="3.899999976158142"/>
										</Node>
									</Node>
									<Node score="-0.8749149359641505">
										<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.950000047683716"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="5">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.8465087974436658">
									<True/>
									<Node score="1.152960038522332">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.7867853493029409">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.8479082619019592">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.450000047683716"/>
										</Node>
									</Node>
									<Node score="-0.8509529799735204">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.950000047683716"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="6">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.8198762751052812">
									<True/>
									<Node score="1.0648978974041987">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
										<Node score="1.0648978974041992">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.6499998569488525"/>
										</Node>
										<Node score="1.064897897404199">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="3.350000023841858"/>
										</Node>
									</Node>
									<Node score="-0.7641905268237197">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.8237485002124765">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.450000047683716"/>
										</Node>
									</Node>
									<Node score="-0.8254422057139851">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="7">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="-0.7985799407246769">
									<True/>
									<Node score="0.996485703278887">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.7495261995920656">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.8020736432273603">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="3.899999976158142"/>
										</Node>
									</Node>
									<Node score="-0.804837260801055">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="8">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="-0.7804681920031483">
									<True/>
									<Node score="0.9422825735348583">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.7373606474236732">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.7836012081712677">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="3.899999976158142"/>
										</Node>
									</Node>
									<Node score="-0.7873262947296125">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="9">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="-0.7650720701760387">
									<True/>
									<Node score="0.8986564214437078">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.7279939781533423">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.7678114948321874">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.350000023841858"/>
										</Node>
									</Node>
									<Node score="-0.7724354496615838">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="10">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="-0.75194590594979">
									<True/>
									<Node score="0.8630916360866473">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.7180893968876636">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.7549384549897005">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.450000047683716"/>
										</Node>
									</Node>
									<Node score="-0.7594426776205829">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="11">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="-0.7408057670769977">
									<True/>
									<Node score="0.8337920816536498">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.7126321302647113">
										<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										<Node score="-0.7432197695548949">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="3.899999976158142"/>
										</Node>
									</Node>
									<Node score="-0.7485719750433286">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
					</Segmentation>
				</MiningModel>
			</Segment>
			<Segment id="2">
				<True/>
				<MiningModel functionName="regression">
					<MiningSchema>
						<MiningField name="double(float(Petal.Width))"/>
						<MiningField name="double(float(Petal.Length))"/>
					</MiningSchema>
					<Output>
						<OutputField name="decisionFunction(versicolor)" optype="continuous" dataType="double" isFinalResult="false"/>
					</Output>
					<Targets>
						<Target rescaleFactor="0.1"/>
					</Targets>
					<Segmentation multipleModelMethod="sum" missingPredictionTreatment="returnMissing">
						<Segment id="1">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-1.0000000000000002">
									<True/>
									<Node score="-0.9999999999999998">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="1.6653345369377346E-16">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.9375000000000002">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="1.1102230246251565E-16">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="2">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.9503716554588935">
									<True/>
									<Node score="-0.9503716554588938">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="0.0038202575627447185">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.6062616988237866">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="0.00435596928388512">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="3">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.9089662539014766">
									<True/>
									<Node score="-0.9089620164762351">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="0.009297598404632302">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.3864298765992487">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="0.010068163749361933">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="4">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.8742029898323503">
									<True/>
									<Node score="-0.8741917995402392">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.998481844989391">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.1824665976358444">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.349999904632568"/>
										</Node>
									</Node>
									<Node score="0.016461848287834233">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="5">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.8448770276331067">
									<True/>
									<Node score="-0.8448590640762464">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.9583083668656762">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.0686238088788258">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.349999904632568"/>
										</Node>
									</Node>
									<Node score="0.023056228722782394">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="6">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.7441600459575414">
									<True/>
									<Node score="-0.8200105456408747">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.3710756626601063">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="1.0777597104895253">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="0.17588225687188797">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="7">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.7162183158985661">
									<True/>
									<Node score="-0.7988908225699727">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.33289694615264265">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="1.0065435936910332">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="0.16715716076301415">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="8">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.7827149409043324">
									<True/>
									<Node score="-0.7808826384592991">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.2972220364529099">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="0.9502722582420858">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="-0.1920017238054623">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.049999952316284"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="9">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.7677691272316546">
									<True/>
									<Node score="-0.7654828041872668">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
									</Node>
									<Node score="-0.8610765141807232">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="0.8186627140513824">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.349999904632568"/>
										</Node>
									</Node>
									<Node score="0.1671977916159105">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="10">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.5618393780884495">
									<True/>
									<Node score="-0.7522788144147149">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.2630599537039136">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="0.8700591308574738">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
										</Node>
									</Node>
									<Node score="-1.0063686968808845">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.650000095367432"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="11">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="-0.7443875422449486">
									<True/>
									<Node score="-0.740930721420251">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
									</Node>
									<Node score="-0.8290865382411563">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="0.749292944993573">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.349999904632568"/>
										</Node>
									</Node>
									<Node score="0.23728094521021206">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
					</Segmentation>
				</MiningModel>
			</Segment>
			<Segment id="3">
				<True/>
				<MiningModel functionName="regression">
					<MiningSchema>
						<MiningField name="double(float(Petal.Width))"/>
						<MiningField name="double(float(Petal.Length))"/>
						<MiningField name="double(float(Sepal.Length))"/>
						<MiningField name="double(float(Sepal.Width))"/>
					</MiningSchema>
					<Output>
						<OutputField name="decisionFunction(virginica)" optype="continuous" dataType="double" isFinalResult="false"/>
					</Output>
					<Targets>
						<Target rescaleFactor="0.1"/>
					</Targets>
					<Segmentation multipleModelMethod="sum" missingPredictionTreatment="returnMissing">
						<Segment id="1">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="2.000000000000001">
									<True/>
									<Node score="1.1102230246251564E-16">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="2.0000000000000004">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.9999999999999999">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
											</Node>
										</Node>
										<Node score="2.0">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="2.0000000000000004">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
										<Node score="-0.9999999999999999">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.950000047683716"/>
										</Node>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="2">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="1.6544242942422909">
									<True/>
									<Node score="-0.032249101538204504">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.8230584742034086">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.9508657876055812">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
											</Node>
										</Node>
										<Node score="1.7063659825064663">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="1.7063659825064659">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
										<Node score="-0.9833472083473733">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.950000047683716"/>
										</Node>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="3">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="1.4278569062402076">
									<True/>
									<Node score="-0.058777878542846176">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.6905793549713883">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.9097780716913534">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
											</Node>
										</Node>
										<Node score="1.505693914571601">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="1.5056887154959047">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
										<Node score="-0.9665542340231648">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.950000047683716"/>
										</Node>
									</Node>
									<Node score="1.4279169418680295">
										<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.850000023841858"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="4">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="1.2691433396145646">
									<True/>
									<Node score="-1.0436748857192535">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.586682597449597">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.8752213383923925">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
											</Node>
										</Node>
										<Node score="0.9948998024543874">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										</Node>
									</Node>
									<Node score="1.3604582010983688">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
										<Node score="-0.9499095841601944">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.950000047683716"/>
										</Node>
									</Node>
									<Node score="1.2692631316075937">
										<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.950000047683716"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="5">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="1.1528744930147958">
									<True/>
									<Node score="1.3951415496874529">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.8479597377391187">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.84480623758361">
												<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
											</Node>
										</Node>
										<Node score="0.16196661171953014">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="6.049999952316284"/>
										</Node>
									</Node>
									<Node score="-0.9946087431711985">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.499577055365054">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="2.75"/>
										</Node>
									</Node>
									<Node score="0.6156207643379427">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="6">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="1.0647846686176332">
									<True/>
									<Node score="1.2725058617256486">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.8237947085998416">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.8199674183912022">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
											</Node>
										</Node>
										<Node score="0.17727759675693544">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="6.049999952316284"/>
										</Node>
									</Node>
									<Node score="-0.9523411585446242">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.427310274471599">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.799999952316284"/>
										</Node>
									</Node>
									<Node score="0.5498980454463848">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="7">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="0.9976337424348314">
									<True/>
									<Node score="1.173603473257233">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.8021163391356639">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.7988552757902093">
												<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
											</Node>
										</Node>
										<Node score="0.12955540219860082">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="6.049999952316284"/>
										</Node>
									</Node>
									<Node score="-0.9302787093127194">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.3234157295396034">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.799999952316284"/>
										</Node>
									</Node>
									<Node score="0.4607749593951336">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="8">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="0.9443487138522749">
									<True/>
									<Node score="0.06280363208318251">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.7836418239588165">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.780853100332832">
												<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
											</Node>
										</Node>
										<Node score="1.1116911539944705">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="-0.9099360161895765">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.2402885922879403">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.75"/>
										</Node>
									</Node>
									<Node score="0.38215619694238595">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="9">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Length))"/>
								</MiningSchema>
								<Node score="0.9011576231084493">
									<True/>
									<Node score="1.0534077641602837">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.7678502093605842">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.765458087617645">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
											</Node>
										</Node>
										<Node score="0.018813909068202347">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="6.049999952316284"/>
										</Node>
									</Node>
									<Node score="-0.8969782540733651">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
										<Node score="1.1582728493492949">
											<SimplePredicate field="double(float(Sepal.Length))" operator="lessOrEqual" value="5.799999952316284"/>
										</Node>
									</Node>
									<Node score="0.33136068101885546">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.8500001430511475"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="10">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
								</MiningSchema>
								<Node score="0.8177788000789896">
									<True/>
									<Node score="-0.024219409985652588">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.7549754334947822">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.7522580085126321">
												<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="0.800000011920929"/>
											</Node>
										</Node>
										<Node score="1.0371165686580004">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="1.1283423038251252">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.650000095367432"/>
									</Node>
									<Node score="-0.8690167663829272">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.75"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
						<Segment id="11">
							<True/>
							<TreeModel functionName="regression" missingValueStrategy="nullPrediction" noTrueChildStrategy="returnLastPrediction">
								<MiningSchema>
									<MiningField name="double(float(Petal.Width))"/>
									<MiningField name="double(float(Petal.Length))"/>
									<MiningField name="double(float(Sepal.Width))"/>
								</MiningSchema>
								<Node score="0.8373624268995999">
									<True/>
									<Node score="-0.05115095894286604">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.6500000357627869"/>
										<Node score="-0.7432534426239334">
											<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="4.950000047683716"/>
											<Node score="-0.7409131172585711">
												<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="2.449999988079071"/>
											</Node>
										</Node>
										<Node score="0.9896470132698986">
											<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.550000011920929"/>
										</Node>
									</Node>
									<Node score="-1.1638818669974311">
										<SimplePredicate field="double(float(Petal.Length))" operator="lessOrEqual" value="5.049999952316284"/>
										<Node score="0.7257606563741402">
											<SimplePredicate field="double(float(Sepal.Width))" operator="lessOrEqual" value="3.100000023841858"/>
										</Node>
									</Node>
									<Node score="0.8370851303277381">
										<SimplePredicate field="double(float(Petal.Width))" operator="lessOrEqual" value="1.8499999642372131"/>
									</Node>
								</Node>
							</TreeModel>
						</Segment>
					</Segmentation>
				</MiningModel>
			</Segment>
			<Segment id="4">
				<True/>
				<RegressionModel functionName="classification" normalizationMethod="softmax">
					<MiningSchema>
						<MiningField name="Species" usageType="target"/>
						<MiningField name="decisionFunction(setosa)"/>
						<MiningField name="decisionFunction(versicolor)"/>
						<MiningField name="decisionFunction(virginica)"/>
					</MiningSchema>
					<Output>
						<OutputField name="probability(setosa)" optype="continuous" dataType="double" feature="probability" value="setosa"/>
						<OutputField name="probability(versicolor)" optype="continuous" dataType="double" feature="probability" value="versicolor"/>
						<OutputField name="probability(virginica)" optype="continuous" dataType="double" feature="probability" value="virginica"/>
					</Output>
					<RegressionTable intercept="0.0" targetCategory="setosa">
						<NumericPredictor name="decisionFunction(setosa)" coefficient="1.0"/>
					</RegressionTable>
					<RegressionTable intercept="0.0" targetCategory="versicolor">
						<NumericPredictor name="decisionFunction(versicolor)" coefficient="1.0"/>
					</RegressionTable>
					<RegressionTable intercept="0.0" targetCategory="virginica">
						<NumericPredictor name="decisionFunction(virginica)" coefficient="1.0"/>
					</RegressionTable>
				</RegressionModel>
			</Segment>
		</Segmentation>
		<ModelVerification recordCount="3">
			<VerificationFields>
				<VerificationField field="Sepal.Length" column="data:Sepal.Length"/>
				<VerificationField field="Sepal.Width" column="data:Sepal.Width"/>
				<VerificationField field="Petal.Length" column="data:Petal.Length"/>
				<VerificationField field="Petal.Width" column="data:Petal.Width"/>
				<VerificationField field="probability(setosa)" column="data:probability_setosa" precision="1.0E-13" zeroThreshold="1.0E-13"/>
				<VerificationField field="probability(versicolor)" column="data:probability_versicolor" precision="1.0E-13" zeroThreshold="1.0E-13"/>
				<VerificationField field="probability(virginica)" column="data:probability_virginica" precision="1.0E-13" zeroThreshold="1.0E-13"/>
			</VerificationFields>
			<InlineTable>
				<row>
					<data:Sepal.Length>5.7</data:Sepal.Length>
					<data:Sepal.Width>2.8</data:Sepal.Width>
					<data:Petal.Length>4.5</data:Petal.Length>
					<data:Petal.Width>1.3</data:Petal.Width>
					<data:probability_setosa>0.09114865605160963</data:probability_setosa>
					<data:probability_versicolor>0.8174831551126884</data:probability_versicolor>
					<data:probability_virginica>0.0913681888357019</data:probability_virginica>
				</row>
				<row>
					<data:Sepal.Length>5.6</data:Sepal.Length>
					<data:Sepal.Width>2.9</data:Sepal.Width>
					<data:Petal.Length>3.6</data:Petal.Length>
					<data:Petal.Width>1.3</data:Petal.Width>
					<data:probability_setosa>0.09113558955875237</data:probability_setosa>
					<data:probability_versicolor>0.8174949080114198</data:probability_versicolor>
					<data:probability_virginica>0.09136950242982789</data:probability_virginica>
				</row>
				<row>
					<data:Sepal.Length>5.1</data:Sepal.Length>
					<data:Sepal.Width>3.7</data:Sepal.Width>
					<data:Petal.Length>1.5</data:Petal.Length>
					<data:Petal.Width>0.4</data:Petal.Width>
					<data:probability_setosa>0.8236125260956297</data:probability_setosa>
					<data:probability_versicolor>0.08820306591336757</data:probability_versicolor>
					<data:probability_virginica>0.08818440799100256</data:probability_virginica>
				</row>
			</InlineTable>
		</ModelVerification>
	</MiningModel>
</PMML>
