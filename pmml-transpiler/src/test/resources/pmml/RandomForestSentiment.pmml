<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<PMML xmlns="http://www.dmg.org/PMML-4_4" xmlns:data="http://jpmml.org/jpmml-model/InlineTable" version="4.4">
	<Header>
		<Application name="SkLearn2PMML package" version="0.110.0"/>
		<Timestamp>2024-09-28T20:32:56Z</Timestamp>
	</Header>
	<DataDictionary>
		<DataField name="Score" optype="categorical" dataType="integer">
			<Value value="0"/>
			<Value value="1"/>
		</DataField>
		<DataField name="Sentence" optype="categorical" dataType="string"/>
	</DataDictionary>
	<TransformationDictionary>
		<DefineFunction name="tf(lowercase(Sentence))" optype="continuous" dataType="integer">
			<ParameterField name="document"/>
			<ParameterField name="term"/>
			<TextIndex textField="document" x-wordRE="(?u)\b\w\w+\b">
				<FieldRef field="term"/>
			</TextIndex>
		</DefineFunction>
	</TransformationDictionary>
	<MiningModel functionName="classification" algorithmName="sklearn.ensemble._forest.RandomForestClassifier">
		<MiningSchema>
			<MiningField name="Score" usageType="target"/>
			<MiningField name="Sentence"/>
		</MiningSchema>
		<Output>
			<OutputField name="probability(0)" optype="continuous" dataType="double" feature="probability" value="0"/>
			<OutputField name="probability(1)" optype="continuous" dataType="double" feature="probability" value="1"/>
		</Output>
		<LocalTransformations>
			<DerivedField name="lowercase(Sentence)" optype="categorical" dataType="string">
				<Apply function="lowercase">
					<FieldRef field="Sentence"/>
				</Apply>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), after)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">after</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), after))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), after)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), and)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">and</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), and))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), and)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), and the)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">and the</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), and the))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), and the)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), at)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">at</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), at))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), at)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), best)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">best</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), best))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), best)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), comfortable)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">comfortable</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), comfortable))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), comfortable)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), do)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">do</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), do))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), do)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), does not)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">does not</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), does not))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), does not)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), doesn)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">doesn</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), doesn))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), doesn)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), don)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">don</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), don))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), don)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), easy)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">easy</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), easy))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), easy)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), ever)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">ever</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), ever))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), ever)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), excellent)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">excellent</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), excellent))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), excellent)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), first)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">first</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), first))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), first)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), good)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">good</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), good))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), good)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), great)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), in)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">in</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), in))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), in)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), is)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">is</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), is))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), is)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), is great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">is great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), is great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), is great)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), love)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">love</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), love))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), love)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), me)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">me</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), me))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), me)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), money)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">money</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), money))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), money)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), nice)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">nice</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), nice))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), nice)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), not)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">not</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), not))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), not)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), out)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">out</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), out))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), out)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), price)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">price</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), price))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), price)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), quality)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">quality</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), quality))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), quality)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), recommend)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">recommend</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), recommend))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), recommend)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), so)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">so</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), so))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), so)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), sound)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">sound</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), sound))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), sound)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the best)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the best</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the best))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the best)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), the phone)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">the phone</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), the phone))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), the phone)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), to)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">to</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), to))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), to)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), very)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">very</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), very))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), very)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), was)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">was</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), was))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), was)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), waste)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">waste</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), waste))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), waste)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), well)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">well</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), well))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), well)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), work)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">work</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), work))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), work)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), works)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">works</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), works))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), works)"/>
			</DerivedField>
			<DerivedField name="tf(lowercase(Sentence), works great)" optype="continuous" dataType="double">
				<Apply function="tf(lowercase(Sentence))">
					<FieldRef field="lowercase(Sentence)"/>
					<Constant dataType="string">works great</Constant>
				</Apply>
			</DerivedField>
			<DerivedField name="float(tf(lowercase(Sentence), works great))" optype="continuous" dataType="float">
				<FieldRef field="tf(lowercase(Sentence), works great)"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), works)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), works))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), doesn)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), doesn))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), don)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), don))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), very)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), very))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), excellent)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), excellent))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), sound)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), sound))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), not)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), not))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), best)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), best))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), so)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), so))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), and the)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), and the))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), ever)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), ever))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), in)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), in))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), work)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), work))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), money)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), money))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), good)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), good))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), love)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), love))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), well)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), well))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), does not)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), does not))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), price)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), price))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), nice)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), nice))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), waste)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), waste))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), after)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), after))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), first)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), first))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), works great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), works great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), and)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), and))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), do)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), do))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), is)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), is))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), was)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), was))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), to)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), to))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the phone)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the phone))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), is great)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), is great))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), out)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), out))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), me)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), me))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), the best)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), the best))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), recommend)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), recommend))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), quality)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), quality))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), at)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), at))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), easy)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), easy))"/>
			</DerivedField>
			<DerivedField name="double(float(tf(lowercase(Sentence), comfortable)))" optype="continuous" dataType="double">
				<FieldRef field="float(tf(lowercase(Sentence), comfortable))"/>
			</DerivedField>
		</LocalTransformations>
		<Segmentation multipleModelMethod="average" missingPredictionTreatment="returnMissing">
			<Segment id="1">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), doesn)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), sound)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), doesn)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), sound)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.5472636815920398"/>
														<ScoreDistribution value="1" recordCount="0.4527363184079602"/>
													</Node>
													<Node score="1" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.42857142857142855"/>
														<ScoreDistribution value="1" recordCount="0.5714285714285714"/>
													</Node>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.038461538461538464"/>
													<ScoreDistribution value="1" recordCount="0.9615384615384616"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.7264150943396226"/>
												<ScoreDistribution value="1" recordCount="0.27358490566037735"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.02531645569620253"/>
											<ScoreDistribution value="1" recordCount="0.9746835443037974"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.2727272727272727"/>
										<ScoreDistribution value="1" recordCount="0.7272727272727273"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.7692307692307693"/>
									<ScoreDistribution value="1" recordCount="0.23076923076923078"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.8181818181818182"/>
								<ScoreDistribution value="1" recordCount="0.18181818181818182"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="2">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), headset)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">headset</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), headset))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), headset)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), headset)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), headset))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), headset)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.45374449339207046"/>
														<ScoreDistribution value="1" recordCount="0.5462555066079295"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.6029411764705882"/>
														<ScoreDistribution value="1" recordCount="0.39705882352941174"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.8888888888888888"/>
													<ScoreDistribution value="1" recordCount="0.1111111111111111"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.8888888888888888"/>
												<ScoreDistribution value="1" recordCount="0.1111111111111111"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.3448275862068966"/>
											<ScoreDistribution value="1" recordCount="0.6551724137931034"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.4166666666666667"/>
										<ScoreDistribution value="1" recordCount="0.5833333333333334"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.5666666666666667"/>
									<ScoreDistribution value="1" recordCount="0.43333333333333335"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="1"/>
							</Node>
						</Node>
						<Node score="0" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.8552631578947368"/>
							<ScoreDistribution value="1" recordCount="0.14473684210526316"/>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="1"/>
							<ScoreDistribution value="1" recordCount="0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="3">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), if)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">if</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), if))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), if)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), if)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), if))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), if)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.4978540772532189"/>
														<ScoreDistribution value="1" recordCount="0.5021459227467812"/>
													</Node>
													<Node score="1" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.15789473684210525"/>
														<ScoreDistribution value="1" recordCount="0.8421052631578947"/>
													</Node>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0"/>
													<ScoreDistribution value="1" recordCount="1"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.8333333333333334"/>
												<ScoreDistribution value="1" recordCount="0.16666666666666666"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.05128205128205128"/>
											<ScoreDistribution value="1" recordCount="0.9487179487179487"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.02127659574468085"/>
										<ScoreDistribution value="1" recordCount="0.9787234042553191"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.9230769230769231"/>
									<ScoreDistribution value="1" recordCount="0.07692307692307693"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.8"/>
								<ScoreDistribution value="1" recordCount="0.2"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.30303030303030304"/>
							<ScoreDistribution value="1" recordCount="0.696969696969697"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="4">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), does not)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), be)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">be</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), be))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), be)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), bluetooth)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">bluetooth</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), bluetooth))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), bluetooth)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), ve)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">ve</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), ve))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), ve)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), be)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), be))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), bluetooth)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), bluetooth))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), ve)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), ve))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), be)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), bluetooth)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), ve)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.5489296636085627"/>
														<ScoreDistribution value="1" recordCount="0.4510703363914373"/>
													</Node>
													<Node score="1" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.12121212121212122"/>
														<ScoreDistribution value="1" recordCount="0.8787878787878788"/>
													</Node>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.037037037037037035"/>
													<ScoreDistribution value="1" recordCount="0.9629629629629629"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.13636363636363635"/>
												<ScoreDistribution value="1" recordCount="0.8636363636363636"/>
											</Node>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.6296296296296297"/>
											<ScoreDistribution value="1" recordCount="0.37037037037037035"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.05555555555555555"/>
										<ScoreDistribution value="1" recordCount="0.9444444444444444"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), does not)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="0.9090909090909091"/>
									<ScoreDistribution value="1" recordCount="0.09090909090909091"/>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.875"/>
									<ScoreDistribution value="1" recordCount="0.125"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.2"/>
								<ScoreDistribution value="1" recordCount="0.8"/>
							</Node>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.7666666666666667"/>
							<ScoreDistribution value="1" recordCount="0.23333333333333334"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="5">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), has)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">has</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), has))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), has)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), has)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), has))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), has)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
										<Node score="0" recordCount="1">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="0.5451306413301663"/>
											<ScoreDistribution value="1" recordCount="0.45486935866983375"/>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.02631578947368421"/>
											<ScoreDistribution value="1" recordCount="0.9736842105263158"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="0"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.06896551724137931"/>
									<ScoreDistribution value="1" recordCount="0.9310344827586207"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.24390243902439024"/>
								<ScoreDistribution value="1" recordCount="0.7560975609756098"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.1724137931034483"/>
							<ScoreDistribution value="1" recordCount="0.8275862068965517"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="6">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), any)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">any</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), any))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), any)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), any)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), any))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), any)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
												<Node score="0" recordCount="1">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="0.5369928400954654"/>
													<ScoreDistribution value="1" recordCount="0.4630071599045346"/>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.8461538461538461"/>
													<ScoreDistribution value="1" recordCount="0.15384615384615385"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.9047619047619048"/>
												<ScoreDistribution value="1" recordCount="0.09523809523809523"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.29411764705882354"/>
										<ScoreDistribution value="1" recordCount="0.7058823529411765"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="1"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="1"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="7">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.5569060773480663"/>
							<ScoreDistribution value="1" recordCount="0.4430939226519337"/>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.021052631578947368"/>
							<ScoreDistribution value="1" recordCount="0.9789473684210527"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="8">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), do)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), only)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">only</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), only))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), only)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), only)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), only))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), only)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), do)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="1">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="0.5807926829268293"/>
												<ScoreDistribution value="1" recordCount="0.4192073170731707"/>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.43478260869565216"/>
												<ScoreDistribution value="1" recordCount="0.5652173913043478"/>
											</Node>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.875"/>
											<ScoreDistribution value="1" recordCount="0.125"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.65"/>
										<ScoreDistribution value="1" recordCount="0.35"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.4834710743801653"/>
									<ScoreDistribution value="1" recordCount="0.5165289256198347"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="1"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="9">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), service)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">service</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), service))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), service)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), still)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">still</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), still))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), still)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), still)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), still))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), service)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), service))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), still)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), service)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.44912280701754387"/>
														<ScoreDistribution value="1" recordCount="0.5508771929824562"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.5555555555555556"/>
														<ScoreDistribution value="1" recordCount="0.4444444444444444"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.896551724137931"/>
													<ScoreDistribution value="1" recordCount="0.10344827586206896"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="1"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.3712871287128713"/>
											<ScoreDistribution value="1" recordCount="0.6287128712871287"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0"/>
										<ScoreDistribution value="1" recordCount="1"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.9583333333333334"/>
									<ScoreDistribution value="1" recordCount="0.041666666666666664"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.8125"/>
								<ScoreDistribution value="1" recordCount="0.1875"/>
							</Node>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.96"/>
							<ScoreDistribution value="1" recordCount="0.04"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="10">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), so)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), if you)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">if you</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), if you))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), if you)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), if you)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), if you))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), if you)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), so)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="1">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="0.5301003344481605"/>
												<ScoreDistribution value="1" recordCount="0.4698996655518395"/>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.7317073170731707"/>
												<ScoreDistribution value="1" recordCount="0.2682926829268293"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="0.3815789473684211"/>
											<ScoreDistribution value="1" recordCount="0.618421052631579"/>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.5454545454545454"/>
											<ScoreDistribution value="1" recordCount="0.45454545454545453"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.8518518518518519"/>
										<ScoreDistribution value="1" recordCount="0.14814814814814814"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.25"/>
									<ScoreDistribution value="1" recordCount="0.75"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.9411764705882353"/>
								<ScoreDistribution value="1" recordCount="0.058823529411764705"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="11">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.5086042065009561"/>
														<ScoreDistribution value="1" recordCount="0.491395793499044"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.6785714285714286"/>
														<ScoreDistribution value="1" recordCount="0.32142857142857145"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.7647058823529411"/>
													<ScoreDistribution value="1" recordCount="0.23529411764705882"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.45038167938931295"/>
												<ScoreDistribution value="1" recordCount="0.549618320610687"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.8867924528301887"/>
										<ScoreDistribution value="1" recordCount="0.11320754716981132"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.9285714285714286"/>
									<ScoreDistribution value="1" recordCount="0.07142857142857142"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.10843373493975904"/>
								<ScoreDistribution value="1" recordCount="0.891566265060241"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="12">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the phone)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), the phone)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
												<Node score="1" recordCount="1">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="0.459375"/>
													<ScoreDistribution value="1" recordCount="0.540625"/>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.75"/>
													<ScoreDistribution value="1" recordCount="0.25"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.8878504672897196"/>
												<ScoreDistribution value="1" recordCount="0.11214953271028037"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.08536585365853659"/>
										<ScoreDistribution value="1" recordCount="0.9146341463414634"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.5769230769230769"/>
									<ScoreDistribution value="1" recordCount="0.4230769230769231"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.6265060240963856"/>
								<ScoreDistribution value="1" recordCount="0.37349397590361444"/>
							</Node>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="1"/>
							<ScoreDistribution value="1" recordCount="0"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="13">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), work)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), money)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), after)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), is great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), work)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), after)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), money)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.45918367346938777"/>
														<ScoreDistribution value="1" recordCount="0.5408163265306123"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.8666666666666667"/>
														<ScoreDistribution value="1" recordCount="0.13333333333333333"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.6590909090909091"/>
													<ScoreDistribution value="1" recordCount="0.3409090909090909"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.6142857142857143"/>
												<ScoreDistribution value="1" recordCount="0.38571428571428573"/>
											</Node>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.8235294117647058"/>
											<ScoreDistribution value="1" recordCount="0.17647058823529413"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="1"/>
										<ScoreDistribution value="1" recordCount="0"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="0.3684210526315789"/>
									<ScoreDistribution value="1" recordCount="0.631578947368421"/>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="1"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.06666666666666667"/>
								<ScoreDistribution value="1" recordCount="0.9333333333333333"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.19101123595505617"/>
							<ScoreDistribution value="1" recordCount="0.8089887640449438"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="14">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), in)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), and)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), do)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), with)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">with</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), with))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), with)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), with)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), with))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), in)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), do)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
											<Node score="0" recordCount="1">
												<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
												<ScoreDistribution value="0" recordCount="0.5523648648648649"/>
												<ScoreDistribution value="1" recordCount="0.44763513513513514"/>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.8571428571428571"/>
												<ScoreDistribution value="1" recordCount="0.14285714285714285"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.10526315789473684"/>
											<ScoreDistribution value="1" recordCount="0.8947368421052632"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.9523809523809523"/>
										<ScoreDistribution value="1" recordCount="0.047619047619047616"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.7083333333333334"/>
									<ScoreDistribution value="1" recordCount="0.2916666666666667"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.03333333333333333"/>
								<ScoreDistribution value="1" recordCount="0.9666666666666667"/>
							</Node>
						</Node>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
								<Node score="1" recordCount="1">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), with)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="0.4942528735632184"/>
									<ScoreDistribution value="1" recordCount="0.5057471264367817"/>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.32"/>
									<ScoreDistribution value="1" recordCount="0.68"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.4426229508196721"/>
								<ScoreDistribution value="1" recordCount="0.5573770491803278"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.3125"/>
							<ScoreDistribution value="1" recordCount="0.6875"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="15">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="1" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
							<ScoreDistribution value="0" recordCount="0.45044052863436124"/>
							<ScoreDistribution value="1" recordCount="0.5495594713656388"/>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.6304347826086957"/>
							<ScoreDistribution value="1" recordCount="0.3695652173913043"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="16">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), quality)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), of)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">of</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), of))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), of)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), of)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), of))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), the best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), quality)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), of)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.4785276073619632"/>
														<ScoreDistribution value="1" recordCount="0.5214723926380368"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.927710843373494"/>
														<ScoreDistribution value="1" recordCount="0.07228915662650602"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.65"/>
													<ScoreDistribution value="1" recordCount="0.35"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.9444444444444444"/>
												<ScoreDistribution value="1" recordCount="0.05555555555555555"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.36"/>
											<ScoreDistribution value="1" recordCount="0.64"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0"/>
										<ScoreDistribution value="1" recordCount="1"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.14285714285714285"/>
									<ScoreDistribution value="1" recordCount="0.8571428571428571"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.05555555555555555"/>
								<ScoreDistribution value="1" recordCount="0.9444444444444444"/>
							</Node>
						</Node>
						<Node score="0" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.92"/>
							<ScoreDistribution value="1" recordCount="0.08"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="17">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), is great)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), is great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.5327868852459017"/>
							<ScoreDistribution value="1" recordCount="0.4672131147540984"/>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="18">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.5098241985522234"/>
							<ScoreDistribution value="1" recordCount="0.4901758014477766"/>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="19">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), easy to)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">easy to</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), easy to))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), easy to)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), happy)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">happy</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), happy))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), happy)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), in my)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">in my</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), in my))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), in my)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), the price)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">the price</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), the price))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), the price)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), happy)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), happy))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), the price)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), the price))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), easy to)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), easy to))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), in my)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), in my))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), happy)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), the price)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), the best)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), easy to)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), in my)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.5420673076923077"/>
														<ScoreDistribution value="1" recordCount="0.4579326923076923"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.8421052631578947"/>
														<ScoreDistribution value="1" recordCount="0.15789473684210525"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.9375"/>
													<ScoreDistribution value="1" recordCount="0.0625"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.10526315789473684"/>
												<ScoreDistribution value="1" recordCount="0.8947368421052632"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.05555555555555555"/>
										<ScoreDistribution value="1" recordCount="0.9444444444444444"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.0625"/>
									<ScoreDistribution value="1" recordCount="0.9375"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.23809523809523808"/>
								<ScoreDistribution value="1" recordCount="0.7619047619047619"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="20">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), well)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), waste)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), was)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), to)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), waste)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), well)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), was)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.550561797752809"/>
														<ScoreDistribution value="1" recordCount="0.449438202247191"/>
													</Node>
													<Node score="1" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.037037037037037035"/>
														<ScoreDistribution value="1" recordCount="0.9629629629629629"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), to)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="0.7254901960784313"/>
													<ScoreDistribution value="1" recordCount="0.27450980392156865"/>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.5"/>
													<ScoreDistribution value="1" recordCount="0.5"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="1"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.18181818181818182"/>
											<ScoreDistribution value="1" recordCount="0.8181818181818182"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.0625"/>
										<ScoreDistribution value="1" recordCount="0.9375"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="1"/>
									<ScoreDistribution value="1" recordCount="0"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.21739130434782608"/>
								<ScoreDistribution value="1" recordCount="0.782608695652174"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.15476190476190477"/>
							<ScoreDistribution value="1" recordCount="0.8452380952380952"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="21">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), sound)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
							<Node score="0" recordCount="1">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), sound)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="0.5395927601809954"/>
								<ScoreDistribution value="1" recordCount="0.4604072398190045"/>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.391304347826087"/>
								<ScoreDistribution value="1" recordCount="0.6086956521739131"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.27956989247311825"/>
							<ScoreDistribution value="1" recordCount="0.7204301075268817"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="22">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), excellent)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), does not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), the phone)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), excellent)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), the phone)))" operator="lessOrEqual" value="0.5"/>
										<Node score="0" recordCount="1">
											<SimplePredicate field="double(float(tf(lowercase(Sentence), does not)))" operator="lessOrEqual" value="0.5"/>
											<ScoreDistribution value="0" recordCount="0.511166253101737"/>
											<ScoreDistribution value="1" recordCount="0.48883374689826303"/>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.9473684210526315"/>
											<ScoreDistribution value="1" recordCount="0.05263157894736842"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.7"/>
										<ScoreDistribution value="1" recordCount="0.3"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.1"/>
									<ScoreDistribution value="1" recordCount="0.9"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.7857142857142857"/>
								<ScoreDistribution value="1" recordCount="0.21428571428571427"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="23">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), don)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), comfortable)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), could)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">could</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), could))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), could)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), could)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), could))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), comfortable)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), could)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), don)))" operator="lessOrEqual" value="0.5"/>
												<Node score="1" recordCount="1">
													<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
													<ScoreDistribution value="0" recordCount="0.49818621523579204"/>
													<ScoreDistribution value="1" recordCount="0.501813784764208"/>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.20833333333333334"/>
													<ScoreDistribution value="1" recordCount="0.7916666666666666"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.8285714285714286"/>
												<ScoreDistribution value="1" recordCount="0.17142857142857143"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.68"/>
										<ScoreDistribution value="1" recordCount="0.32"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.06060606060606061"/>
									<ScoreDistribution value="1" recordCount="0.9393939393939394"/>
								</Node>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.7727272727272727"/>
								<ScoreDistribution value="1" recordCount="0.22727272727272727"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.05263157894736842"/>
							<ScoreDistribution value="1" recordCount="0.9473684210526315"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="24">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), and it)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">and it</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), and it))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), and it)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), and it)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), and it))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), great)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
									<Node score="0" recordCount="1">
										<SimplePredicate field="double(float(tf(lowercase(Sentence), and it)))" operator="lessOrEqual" value="0.5"/>
										<ScoreDistribution value="0" recordCount="0.6089517078916372"/>
										<ScoreDistribution value="1" recordCount="0.3910482921083628"/>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.47368421052631576"/>
										<ScoreDistribution value="1" recordCount="0.5263157894736842"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0"/>
									<ScoreDistribution value="1" recordCount="1"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.021739130434782608"/>
								<ScoreDistribution value="1" recordCount="0.9782608695652174"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.21052631578947367"/>
							<ScoreDistribution value="1" recordCount="0.7894736842105263"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="25">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), doesn)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), best)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), me)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), quality)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), fine)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">fine</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), fine))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), fine)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), fine)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), fine))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), fine)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), quality)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), best)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), me)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), doesn)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.4908814589665654"/>
														<ScoreDistribution value="1" recordCount="0.5091185410334347"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="1"/>
														<ScoreDistribution value="1" recordCount="0"/>
													</Node>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.24324324324324326"/>
													<ScoreDistribution value="1" recordCount="0.7567567567567568"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.6875"/>
												<ScoreDistribution value="1" recordCount="0.3125"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.05"/>
											<ScoreDistribution value="1" recordCount="0.95"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.9230769230769231"/>
										<ScoreDistribution value="1" recordCount="0.07692307692307693"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.2711864406779661"/>
									<ScoreDistribution value="1" recordCount="0.7288135593220338"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.11538461538461539"/>
								<ScoreDistribution value="1" recordCount="0.8846153846153846"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.0625"/>
							<ScoreDistribution value="1" recordCount="0.9375"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="26">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), not)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), out)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), comfortable)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), than)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">than</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), than))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), than)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), than)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), than))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), than)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), comfortable)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), out)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), not)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<Node score="1" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.489159891598916"/>
														<ScoreDistribution value="1" recordCount="0.510840108401084"/>
													</Node>
													<Node score="1" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.02"/>
														<ScoreDistribution value="1" recordCount="0.98"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.8571428571428571"/>
													<ScoreDistribution value="1" recordCount="0.14285714285714285"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0"/>
												<ScoreDistribution value="1" recordCount="1"/>
											</Node>
										</Node>
										<Node score="0" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.8686868686868687"/>
											<ScoreDistribution value="1" recordCount="0.13131313131313133"/>
										</Node>
									</Node>
									<Node score="0" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.7391304347826086"/>
										<ScoreDistribution value="1" recordCount="0.2608695652173913"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.25"/>
									<ScoreDistribution value="1" recordCount="0.75"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.23076923076923078"/>
								<ScoreDistribution value="1" recordCount="0.7692307692307693"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.08333333333333333"/>
							<ScoreDistribution value="1" recordCount="0.9166666666666666"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="27">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), good)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), love)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), nice)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), first)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), sound quality)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">sound quality</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), sound quality))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), sound quality)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), will)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">will</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), will))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), will)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), sound quality)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), sound quality))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), will)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), will))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), nice)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), sound quality)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), love)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), good)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), first)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), will)))" operator="lessOrEqual" value="0.5"/>
														<ScoreDistribution value="0" recordCount="0.5548037889039242"/>
														<ScoreDistribution value="1" recordCount="0.44519621109607577"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.8571428571428571"/>
														<ScoreDistribution value="1" recordCount="0.14285714285714285"/>
													</Node>
												</Node>
												<Node score="0" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="1"/>
													<ScoreDistribution value="1" recordCount="0"/>
												</Node>
											</Node>
											<Node score="1" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.4"/>
												<ScoreDistribution value="1" recordCount="0.6"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0"/>
											<ScoreDistribution value="1" recordCount="1"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.375"/>
										<ScoreDistribution value="1" recordCount="0.625"/>
									</Node>
								</Node>
								<Node score="1" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.125"/>
									<ScoreDistribution value="1" recordCount="0.875"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0"/>
								<ScoreDistribution value="1" recordCount="1"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="28">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), works)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), ever)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), works great)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), that)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">that</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), that))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), that)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), that)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), that))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
								<Node score="0" recordCount="1">
									<SimplePredicate field="double(float(tf(lowercase(Sentence), ever)))" operator="lessOrEqual" value="0.5"/>
									<ScoreDistribution value="0" recordCount="0.5438356164383562"/>
									<ScoreDistribution value="1" recordCount="0.45616438356164385"/>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.8"/>
									<ScoreDistribution value="1" recordCount="0.2"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), that)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="0.3532934131736527"/>
								<ScoreDistribution value="1" recordCount="0.6467065868263473"/>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.5675675675675675"/>
								<ScoreDistribution value="1" recordCount="0.43243243243243246"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), works great)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.029411764705882353"/>
							<ScoreDistribution value="1" recordCount="0.9705882352941176"/>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0"/>
							<ScoreDistribution value="1" recordCount="1"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="29">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), very)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), very)))" operator="lessOrEqual" value="0.5"/>
							<Node score="1" recordCount="1">
								<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
								<ScoreDistribution value="0" recordCount="0.4965277777777778"/>
								<ScoreDistribution value="1" recordCount="0.5034722222222222"/>
							</Node>
							<Node score="0" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.7391304347826086"/>
								<ScoreDistribution value="1" recordCount="0.2608695652173913"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.2831858407079646"/>
							<ScoreDistribution value="1" recordCount="0.7168141592920354"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="30">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), the)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), price)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), is)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), recommend)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), at)))"/>
						<MiningField name="double(float(tf(lowercase(Sentence), easy)))"/>
						<MiningField name="lowercase(Sentence)"/>
					</MiningSchema>
					<LocalTransformations>
						<DerivedField name="tf(lowercase(Sentence), then)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">then</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), then))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), then)"/>
						</DerivedField>
						<DerivedField name="tf(lowercase(Sentence), this is)" optype="continuous" dataType="double">
							<Apply function="tf(lowercase(Sentence))">
								<FieldRef field="lowercase(Sentence)"/>
								<Constant dataType="string">this is</Constant>
							</Apply>
						</DerivedField>
						<DerivedField name="float(tf(lowercase(Sentence), this is))" optype="continuous" dataType="float">
							<FieldRef field="tf(lowercase(Sentence), this is)"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), this is)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), this is))"/>
						</DerivedField>
						<DerivedField name="double(float(tf(lowercase(Sentence), then)))" optype="continuous" dataType="double">
							<FieldRef field="float(tf(lowercase(Sentence), then))"/>
						</DerivedField>
					</LocalTransformations>
					<Node>
						<True/>
						<Node>
							<SimplePredicate field="double(float(tf(lowercase(Sentence), this is)))" operator="lessOrEqual" value="0.5"/>
							<Node>
								<SimplePredicate field="double(float(tf(lowercase(Sentence), price)))" operator="lessOrEqual" value="0.5"/>
								<Node>
									<SimplePredicate field="double(float(tf(lowercase(Sentence), at)))" operator="lessOrEqual" value="0.5"/>
									<Node>
										<SimplePredicate field="double(float(tf(lowercase(Sentence), is)))" operator="lessOrEqual" value="0.5"/>
										<Node>
											<SimplePredicate field="double(float(tf(lowercase(Sentence), recommend)))" operator="lessOrEqual" value="0.5"/>
											<Node>
												<SimplePredicate field="double(float(tf(lowercase(Sentence), then)))" operator="lessOrEqual" value="0.5"/>
												<Node>
													<SimplePredicate field="double(float(tf(lowercase(Sentence), easy)))" operator="lessOrEqual" value="0.5"/>
													<Node score="0" recordCount="1">
														<SimplePredicate field="double(float(tf(lowercase(Sentence), the)))" operator="lessOrEqual" value="1.5"/>
														<ScoreDistribution value="0" recordCount="0.5095541401273885"/>
														<ScoreDistribution value="1" recordCount="0.49044585987261147"/>
													</Node>
													<Node score="0" recordCount="1">
														<True/>
														<ScoreDistribution value="0" recordCount="0.6792452830188679"/>
														<ScoreDistribution value="1" recordCount="0.32075471698113206"/>
													</Node>
												</Node>
												<Node score="1" recordCount="1">
													<True/>
													<ScoreDistribution value="0" recordCount="0.23076923076923078"/>
													<ScoreDistribution value="1" recordCount="0.7692307692307693"/>
												</Node>
											</Node>
											<Node score="0" recordCount="1">
												<True/>
												<ScoreDistribution value="0" recordCount="0.84"/>
												<ScoreDistribution value="1" recordCount="0.16"/>
											</Node>
										</Node>
										<Node score="1" recordCount="1">
											<True/>
											<ScoreDistribution value="0" recordCount="0.07142857142857142"/>
											<ScoreDistribution value="1" recordCount="0.9285714285714286"/>
										</Node>
									</Node>
									<Node score="1" recordCount="1">
										<True/>
										<ScoreDistribution value="0" recordCount="0.48295454545454547"/>
										<ScoreDistribution value="1" recordCount="0.5170454545454546"/>
									</Node>
								</Node>
								<Node score="0" recordCount="1">
									<True/>
									<ScoreDistribution value="0" recordCount="0.6818181818181818"/>
									<ScoreDistribution value="1" recordCount="0.3181818181818182"/>
								</Node>
							</Node>
							<Node score="1" recordCount="1">
								<True/>
								<ScoreDistribution value="0" recordCount="0.08"/>
								<ScoreDistribution value="1" recordCount="0.92"/>
							</Node>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.3333333333333333"/>
							<ScoreDistribution value="1" recordCount="0.6666666666666666"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
			<Segment id="31">
				<True/>
				<TreeModel functionName="classification" missingValueStrategy="nullPrediction">
					<MiningSchema>
						<MiningField name="double(float(tf(lowercase(Sentence), and the)))"/>
					</MiningSchema>
					<Node>
						<True/>
						<Node score="0" recordCount="1">
							<SimplePredicate field="double(float(tf(lowercase(Sentence), and the)))" operator="lessOrEqual" value="0.5"/>
							<ScoreDistribution value="0" recordCount="0.5339506172839507"/>
							<ScoreDistribution value="1" recordCount="0.4660493827160494"/>
						</Node>
						<Node score="1" recordCount="1">
							<True/>
							<ScoreDistribution value="0" recordCount="0.32142857142857145"/>
							<ScoreDistribution value="1" recordCount="0.6785714285714286"/>
						</Node>
					</Node>
				</TreeModel>
			</Segment>
		</Segmentation>
	</MiningModel>
</PMML>
